<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Mr' Darcy]]></title>
  <subtitle><![CDATA[hello]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.darcywang.com/"/>
  <updated>2018-08-16T05:36:40.000Z</updated>
  <id>http://www.darcywang.com/</id>
  
  <author>
    <name><![CDATA[Mr' Darcy]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[sphinx语法小记]]></title>
    <link href="http://www.darcywang.com/2017/10/07/sphinx/"/>
    <id>http://www.darcywang.com/2017/10/07/sphinx/</id>
    <published>2017-10-07T01:47:43.000Z</published>
    <updated>2018-08-16T05:36:40.000Z</updated>
    <content type="html"><![CDATA[<p>在刷LeetCode的时候，发现用博客来记录太麻烦，所以选择了Python的免费文档readthedocs来记录自己的刷题记录，博客还是用来记录自己的所学和感悟。</p>
<p>第一次接触rst语法的时候还很不习惯，毕竟以前都是用Markdown来写文章，现在突然换一种方式还是有点措手不及，写过一阵子后发现也还行，现在在这里给大家分享一下自己的认识，也方便自己以后查阅。</p>
<p>在写文档的时候，跟Markdown的来走，首先是标题的分级，Python的语法很奇怪，自己感觉最主要还是格式的要求，对于空格space是非常严格的</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">Level 1  //类似于markdown的#</span><br><span class="line">=======</span></span><br><span class="line"></span><br><span class="line">===================================================</span><br><span class="line">This is level 1 too, but looks better in plain text</span><br><span class="line">===================================================</span><br><span class="line"></span><br><span class="line"><span class="header">Level 2</span><br><span class="line">-------</span></span><br><span class="line"></span><br><span class="line"><span class="header">Level 3</span><br><span class="line">^^^^^^^</span></span><br><span class="line"></span><br><span class="line">Level 4</span><br><span class="line">"""""""</span><br></pre></td></tr></table></figure>
<p>接下来是非常有意思的一个地方，sphinx给了很多默认的注解样式，如果使用的得当，会让页面显得非常好看，让人很想去欣赏</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.. attention::</span><br><span class="line">      不在于刷了多少题目，一定要理解每一次刷的题目</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">caution、danger、<span class="keyword">error</span>、hint、important、note、tip、<span class="keyword">warning</span>、admonition</span><br></pre></td></tr></table></figure>
<p>需要说一下最后一个admonition的用法，这个就是属于自定义标签的感觉, 用法如下<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">.. admonition::</span> 保爷语录</span><br><span class="line">    </span><br><span class="line">    <span class="number">10</span>不在于刷了多少题目，一定要理解每一次刷的题目</span><br><span class="line"></span><br><span class="line"><span class="label">.. admonition::</span> <span class="literal">And</span>, by the way...</span><br><span class="line"></span><br><span class="line">   You can make up your own admonition too.</span><br></pre></td></tr></table></figure></p>
<p><img src="http://oxfndh7v0.bkt.clouddn.com/color.png?imageView2/1/q/75|imageslim" alt=""></p>
<table>
<thead>
<tr>
<th>标记</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>*emphasis*</td>
<td>def</td>
</tr>
<tr>
<td>**strong emphasis**</td>
<td>def2</td>
</tr>
<tr>
<td>`interpreted text`</td>
<td>dsfsdf</td>
</tr>
<tr>
<td>reference_</td>
</tr>
</tbody>
</table>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">.. metadata-placeholder</span><br><span class="line"></span><br><span class="line">   :DC.Title: </span><br><span class="line">      Generic links to be available in all documents</span><br><span class="line">   :DC.Creator: </span><br><span class="line">      Nery, Fernanda</span><br><span class="line">   :DC.Language:</span><br><span class="line">      en</span><br><span class="line">   :DC.Format:</span><br><span class="line">      text/x-rst </span><br><span class="line">   :DC.Description</span><br><span class="line">      This is a partial file at::</span><br><span class="line">         /docs/source/On_Documentation/Z_GenericLinks.txt</span><br><span class="line">         </span><br><span class="line">      Link it to the master file at:: </span><br><span class="line">      </span><br><span class="line">         /docs/source/Z_SharedFiles/Z_GenericLinks.txt</span><br><span class="line">         </span><br><span class="line">      with the following directive::</span><br><span class="line">      </span><br><span class="line">         .. include:: ../On_Documentation/Z_GenericLinks.txt</span><br><span class="line">         </span><br><span class="line">.. links-placeholder</span><br><span class="line"></span><br><span class="line">.. _add Distribute and Pip to the Python installation: https://python-guide.readthedocs.org/en/latest/starting/install/win.html#distribute-pip</span><br><span class="line"></span><br><span class="line">.. _Sphinx's reStructuredText Primer: http://sphinx-doc.org/_sources/rest.txt</span><br><span class="line">.. _reStructuredText User Documentation: http://docutils.sourceforge.net/rst.html</span><br></pre></td></tr></table></figure>
<p>用sphinx写好的文档可以转成pdf格式，以前不是说自己要写一本书么，现在就可以实现了，而且都是可以按照自己的风格来排版，到时候自己出钱就可以出书了，是不是感觉特别棒。</p>
<ol>
<li><p>Install rst2pdf</p>
<ul>
<li>use your package manager (or)</li>
<li>pip install rst2pdf (or)</li>
<li>easy_install rst2pdf</li>
</ul>
</li>
<li><p>Add rst2pdf to the list of extensions in conf.py<br>extensions = [‘rst2pdf.pdfbuilder’]</p>
</li>
</ol>
<p>This list will be empty if you accepted the defaults when the project was setup. If not, just append ‘rst2pdf.pdfbuilder’ to the list.</p>
<ol>
<li><p>Add a pdf_documents variable to conf.py</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pdf_documents = [(<span class="string">'index'</span>, u<span class="string">'rst2pdf'</span>, u<span class="string">'Sample rst2pdf doc'</span>, u<span class="string">'Your Name'</span>),]</span><br><span class="line"><span class="comment"># index - master document</span></span><br><span class="line"><span class="comment"># rst2pdf - name of the generated pdf</span></span><br><span class="line"><span class="comment"># Sample rst2pdf doc - title of the pdf</span></span><br><span class="line"><span class="comment"># Your Name - author name in the pdf</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Generate pdf<br>sphinx-build -b pdf source build/pdf<br>The generated pdf will be in the build/pdf directory. </p>
</li>
</ol>
<p><a href="http://docutils.sourceforge.net/docs/ref/rst/directives.html" target="_blank" rel="external">http://docutils.sourceforge.net/docs/ref/rst/directives.html</a></p>
<p><a href="http://docutils.sourceforge.net/docs/ref/rst/directives.html#admonitions" target="_blank" rel="external">http://docutils.sourceforge.net/docs/ref/rst/directives.html#admonitions</a></p>
<p><a href="https://github.com/ralsina/rst-cheatsheet/blob/master/rst-cheatsheet.rst" target="_blank" rel="external">https://github.com/ralsina/rst-cheatsheet/blob/master/rst-cheatsheet.rst</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在刷LeetCode的时候，发现用博客来记录太麻烦，所以选择了Python的免费文档readthedocs来记录自己的刷题记录，博客还是用来记录自己的所学和感悟。</p>
<p>第一次接触rst语法的时候还很不习惯，毕竟以前都是用Markdown来写文章，现在突然换一种方式]]>
    </summary>
    
      <category term="python3" scheme="http://www.darcywang.com/tags/python3/"/>
    
      <category term="Python3" scheme="http://www.darcywang.com/categories/Python3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python-string]]></title>
    <link href="http://www.darcywang.com/2017/09/09/Python-string/"/>
    <id>http://www.darcywang.com/2017/09/09/Python-string/</id>
    <published>2017-09-09T05:16:51.000Z</published>
    <updated>2017-10-25T09:59:08.000Z</updated>
    <content type="html"><![CDATA[<p>在刷题的过程中，发现自己使用Python时候很多东西东西都不太熟悉，说句实在话，可能我连答案都看不明吧。所以在这个过程中我会去看一些好的文章，然后在这里分享，也是方便自己以后的查阅以及知识的巩固。</p>
<p>如题所示，这篇文章我将主要聊一聊Python中字符串的搞法，参考的文章链接在底部。</p>
<h2 id="u521B_u5EFA_u5B57_u7B26_u4E32"><a href="#u521B_u5EFA_u5B57_u7B26_u4E32" class="headerlink" title="创建字符串"></a>创建字符串</h2><p>创建字符串是非常简单的，跟js差不多，但是也让我们来看一下几种不同的创建方式，有一点需要注意的是3个双引号或者单引号是可以创建多行字符创，类似于js中的``符号</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python string examples - all assignments are identical.</span></span><br><span class="line">String_var = <span class="string">'Python'</span></span><br><span class="line">String_var = <span class="string">"Python"</span></span><br><span class="line">String_var = <span class="string">"""Python"""</span></span><br><span class="line"><span class="comment"># with Triple quotes Strings can extend to multiple lines</span></span><br><span class="line">String_var = <span class="string">""" This document will help you to</span><br><span class="line">explore all the concepts</span><br><span class="line">of Python Strings!!! """</span></span><br><span class="line"><span class="comment"># Replace "document" with "tutorial" and store in another variable</span></span><br><span class="line">substr_var = String_var.replace(<span class="string">"document"</span>, <span class="string">"tutorial"</span>)</span><br><span class="line"><span class="keyword">print</span> (substr_var)</span><br></pre></td></tr></table></figure>
<h2 id="u904D_u5386_u5B57_u7B26_u4E32_u4E2D_u7684_u6BCF_u4E2A_u5143_u7D20"><a href="#u904D_u5386_u5B57_u7B26_u4E32_u4E2D_u7684_u6BCF_u4E2A_u5143_u7D20" class="headerlink" title="遍历字符串中的每个元素"></a>遍历字符串中的每个元素</h2><p>Python对字符串不仅支持正向索引，还会支持反向索引，什么概念，看看下面的table就知道了</p>
<table>
<thead>
<tr>
<th style="text-align:center">P</th>
<th style="text-align:center">Y</th>
<th style="text-align:center">T</th>
<th style="text-align:center">H</th>
<th style="text-align:center">O</th>
<th style="text-align:center">N</th>
<th style="text-align:center">–</th>
<th style="text-align:center">S</th>
<th style="text-align:center">T</th>
<th style="text-align:center">R</th>
<th style="text-align:center">I</th>
<th style="text-align:center">N</th>
<th style="text-align:center">G</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
<td style="text-align:center">4</td>
<td style="text-align:center">5</td>
<td style="text-align:center">6</td>
<td style="text-align:center">7</td>
<td style="text-align:center">8</td>
<td style="text-align:center">9</td>
<td style="text-align:center">10</td>
<td style="text-align:center">11</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td style="text-align:center">-13</td>
<td style="text-align:center">-12</td>
<td style="text-align:center">-11</td>
<td style="text-align:center">-10</td>
<td style="text-align:center">-9</td>
<td style="text-align:center">-8</td>
<td style="text-align:center">-7</td>
<td style="text-align:center">-6</td>
<td style="text-align:center">-5</td>
<td style="text-align:center">-4</td>
<td style="text-align:center">-3</td>
<td style="text-align:center">-2</td>
<td style="text-align:center">-1</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sample_str = <span class="string">'Python String'</span></span><br><span class="line"><span class="keyword">print</span> (sample_str[<span class="number">0</span>])       <span class="comment"># 返回首字母</span></span><br><span class="line"><span class="comment"># output: P</span></span><br><span class="line"><span class="keyword">print</span> (sample_str[-<span class="number">1</span>])      <span class="comment"># 返回最后一个字母</span></span><br><span class="line"><span class="comment"># output: g</span></span><br><span class="line"><span class="keyword">print</span> (sample_str[-<span class="number">2</span>])      <span class="comment"># 返回倒数第二个字母</span></span><br><span class="line"><span class="comment"># output: n</span></span><br></pre></td></tr></table></figure>
<p>为了截取字符串，我们会用到截取操作符，就是冒号，对，你没有听错。有一点需要注意的是[a,b]，实际返回的是索引a到所以b-1，所以是不包括下标b的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sample_str = <span class="string">'Python String'</span></span><br><span class="line"><span class="keyword">print</span> (sample_str[<span class="number">3</span>:<span class="number">5</span>])	    <span class="comment">#return a range of character</span></span><br><span class="line"><span class="comment"># ho</span></span><br><span class="line"><span class="keyword">print</span> (sample_str[<span class="number">7</span>:])      <span class="comment"># return all characters from index 7</span></span><br><span class="line"><span class="comment"># String</span></span><br><span class="line"><span class="keyword">print</span> (sample_str[:<span class="number">6</span>])      <span class="comment"># return all characters before index 6</span></span><br><span class="line"><span class="comment"># Python</span></span><br><span class="line"><span class="keyword">print</span> (sample_str[<span class="number">7</span>:-<span class="number">4</span>])</span><br><span class="line"><span class="comment"># St</span></span><br></pre></td></tr></table></figure>
<h3 id="u7406_u89E3_u975E_u6CD5_u5B57_u7B26_u4E32_u4F7F_u7528_u53CA_u62A5_u9519_u63D0_u793A"><a href="#u7406_u89E3_u975E_u6CD5_u5B57_u7B26_u4E32_u4F7F_u7528_u53CA_u62A5_u9519_u63D0_u793A" class="headerlink" title="理解非法字符串使用及报错提示"></a>理解非法字符串使用及报错提示</h3><p>索引值不能大于字符串的长度</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sample_str = <span class="string">"Python Supports Machine Learning."</span></span><br><span class="line"><span class="keyword">print</span> (sample_str[<span class="number">1024</span>])      <span class="comment">#index must be in range</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># IndexError: string index out of range</span></span><br></pre></td></tr></table></figure>
<p>索引必须是整数</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sample_str = <span class="string">"Welcome post"</span></span><br><span class="line"><span class="keyword">print</span> (sample_str[<span class="number">1.25</span>])      <span class="comment">#index must be an integer</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TypeError: string indices must be integers</span></span><br></pre></td></tr></table></figure>
<h2 id="u4FEE_u6539/_u5220_u9664_u5B57_u7B26_u4E32"><a href="#u4FEE_u6539/_u5220_u9664_u5B57_u7B26_u4E32" class="headerlink" title="修改/删除字符串"></a>修改/删除字符串</h2><p>Python字符串设计是不可变的，意思是你不能修改字符串的内容，但是可以通过重新赋值来改变字符串的值</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sample_str = <span class="string">'Python String'</span></span><br><span class="line">sample_str[<span class="number">2</span>] = <span class="string">'a'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TypeError: 'str' object does not support item assignment</span></span><br><span class="line"></span><br><span class="line">sample_str = <span class="string">'Programming String'</span></span><br><span class="line"><span class="keyword">print</span> (sample_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Output=&gt; Programming String</span></span><br></pre></td></tr></table></figure>
<p>同样，我们也不能删除字符串的某些内容</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sample_str = <span class="string">"Python is the best scripting language."</span></span><br><span class="line"><span class="keyword">del</span> sample_str[<span class="number">1</span>]</span><br><span class="line"><span class="comment"># TypeError: 'str' object doesn't support item deletion</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> sample_str</span><br><span class="line"><span class="keyword">print</span> (sample_str)</span><br><span class="line"><span class="comment"># NameError: name 'sample_str' is not defined</span></span><br></pre></td></tr></table></figure>
<h2 id="u5B57_u7B26_u4E32_u64CD_u4F5C_u7B26"><a href="#u5B57_u7B26_u4E32_u64CD_u4F5C_u7B26" class="headerlink" title="字符串操作符"></a>字符串操作符</h2><table>
<thead>
<tr>
<th style="text-align:center">操作符</th>
<th style="text-align:center">含义</th>
<th style="text-align:center">描述</th>
<th style="text-align:left">示例代码</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">+</td>
<td style="text-align:center">合并</td>
<td style="text-align:center">将两个字符串合并为一个</td>
<td style="text-align:left">var1 = ‘Python’<br>var2 = ‘String’<br>print (var1+var2)<br># PythonString</td>
</tr>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:center">重复</td>
<td style="text-align:center">将字符串重复N遍</td>
<td style="text-align:left">var1 = ‘Python’<br>print (var1*3)<br># PythonPythonPython</td>
</tr>
<tr>
<td style="text-align:center">[ ]</td>
<td style="text-align:center">裁切</td>
<td style="text-align:center">打印某一个裁切的元素</td>
<td style="text-align:left">var1 = ‘Python’<br>print (var1[2])<br># t</td>
</tr>
<tr>
<td style="text-align:center">[ : ]</td>
<td style="text-align:center">范围裁切</td>
<td style="text-align:center">打印某一串裁切的元素</td>
<td style="text-align:left">var1 = ‘Python’<br>print (var1[2:5])<br># tho</td>
</tr>
<tr>
<td style="text-align:center">in</td>
<td style="text-align:center">包含关系</td>
<td style="text-align:center">判断字符串是否包含所给元素, 类似于js的indexof</td>
<td style="text-align:left">var1 = ‘Python’<br>print (‘n’ in var1)<br># True</td>
</tr>
<tr>
<td style="text-align:center">not in</td>
<td style="text-align:center">包含关系</td>
<td style="text-align:center">判断字符串是否包含所给元素</td>
<td style="text-align:left">var1 = ‘Python’<br>print (‘N’ not in var1)<br># True</td>
</tr>
<tr>
<td style="text-align:center">for</td>
<td style="text-align:center">循环</td>
<td style="text-align:center">熟悉的for循环啦</td>
<td style="text-align:left">var1 = ‘Python’<br>for var in var1:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print (var)<br># P<br># y<br># t<br># h<br># o<br># n</td>
</tr>
<tr>
<td style="text-align:center">r/R</td>
<td style="text-align:center">原生字符串标识</td>
<td style="text-align:center">在字符串前面加这样一个标识，字符串里面的反斜杠就不会被转义</td>
<td style="text-align:left">print (r’\n’)<br># \n<br>print (R’\n’)<br># \n</td>
</tr>
</tbody>
</table>
<!-- | [ ] | are neat      |    $1 |           |
| [ ] | are neat      |    $1 |           |
| [ ] | are neat      |    $1 |           |
| [ ] | are neat      |    $1 |           |
| [ ] | are neat      |    $1 |           |
| [ ] | are neat      |    $1 |           |
| [ ] | are neat      |    $1 |           | -->
<h2 id="u5B57_u7B26_u4E32_u683C_u5F0F_u5316_u64CD_u4F5C_u7B26"><a href="#u5B57_u7B26_u4E32_u683C_u5F0F_u5316_u64CD_u4F5C_u7B26" class="headerlink" title="字符串格式化操作符"></a>字符串格式化操作符</h2><p>转义符的使用，看看下面示例：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> (<span class="string">"Python is "</span>widely<span class="string">" used language"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># SyntaxError: invalid syntax</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># After escaping with double-quotes</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (<span class="string">"Python is \"widely\" used language"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Output: Python is “widely” used language</span></span><br></pre></td></tr></table></figure>
<p>百分号的使用，各种各样的对应</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> (<span class="string">"Employee Name: %s,\nEmployee Age:%d"</span> % (<span class="string">'Ashish'</span>,<span class="number">25</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Employee Name: Ashish, </span></span><br><span class="line"><span class="comment"># Employee Age: 25</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:left">规范字符</th>
<th style="text-align:left">对应使用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">%c</td>
<td style="text-align:left">单个字符</td>
</tr>
<tr>
<td style="text-align:left">%s</td>
<td style="text-align:left">字符串 (采用str()的显示)</td>
</tr>
<tr>
<td style="text-align:left">%i</td>
<td style="text-align:left">十进制整数</td>
</tr>
<tr>
<td style="text-align:left">%d</td>
<td style="text-align:left">十进制整数</td>
</tr>
<tr>
<td style="text-align:left">%u</td>
<td style="text-align:left">非十进制整数</td>
</tr>
<tr>
<td style="text-align:left">%o</td>
<td style="text-align:left">八进制整数</td>
</tr>
<tr>
<td style="text-align:left">%x</td>
<td style="text-align:left">十六进制整数(小写)</td>
</tr>
<tr>
<td style="text-align:left">%X</td>
<td style="text-align:left">十六进制整数(大写)</td>
</tr>
<tr>
<td style="text-align:left">%e</td>
<td style="text-align:left">指数 (基底写为 e)</td>
</tr>
<tr>
<td style="text-align:left">%E</td>
<td style="text-align:left">指数 (基底写为 E)</td>
</tr>
<tr>
<td style="text-align:left">%f</td>
<td style="text-align:left">浮点数</td>
</tr>
<tr>
<td style="text-align:left">%F</td>
<td style="text-align:left">浮点数，与上相同</td>
</tr>
<tr>
<td style="text-align:left">%g</td>
<td style="text-align:left">指数(e)或浮点数 (根据显示长度)</td>
</tr>
<tr>
<td style="text-align:left">%G</td>
<td style="text-align:left">指数(E)或浮点数 (根据显示长度)</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> (<span class="string">u' Hello Python!!'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Hello Python</span></span><br></pre></td></tr></table></figure>
<h2 id="u7EDF_u4E00_u7801_u5B57_u7B26_u4E32_u7684_u652F_u6301"><a href="#u7EDF_u4E00_u7801_u5B57_u7B26_u4E32_u7684_u652F_u6301" class="headerlink" title="统一码字符串的支持"></a>统一码字符串的支持</h2><h2 id="Python_u5185_u7F6E_u5B57_u7B26_u4E32_u64CD_u4F5C_u51FD_u6570"><a href="#Python_u5185_u7F6E_u5B57_u7B26_u4E32_u64CD_u4F5C_u51FD_u6570" class="headerlink" title="Python内置字符串操作函数"></a>Python内置字符串操作函数</h2><h3 id="u5B57_u7B26_u4E32_u8F6C_u6362_u51FD_u6570"><a href="#u5B57_u7B26_u4E32_u8F6C_u6362_u51FD_u6570" class="headerlink" title="字符串转换函数"></a>字符串转换函数</h3><h3 id="u5B57_u7B26_u4E32_u5BF9_u6BD4_u51FD_u6570"><a href="#u5B57_u7B26_u4E32_u5BF9_u6BD4_u51FD_u6570" class="headerlink" title="字符串对比函数"></a>字符串对比函数</h3>]]></content>
    <summary type="html">
    <![CDATA[<p>在刷题的过程中，发现自己使用Python时候很多东西东西都不太熟悉，说句实在话，可能我连答案都看不明吧。所以在这个过程中我会去看一些好的文章，然后在这里分享，也是方便自己以后的查阅以及知识的巩固。</p>
<p>如题所示，这篇文章我将主要聊一聊Python中字符串的搞法，参]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[The Road to USA]]></title>
    <link href="http://www.darcywang.com/2017/06/21/myapply/"/>
    <id>http://www.darcywang.com/2017/06/21/myapply/</id>
    <published>2017-06-21T12:05:28.000Z</published>
    <updated>2017-12-13T01:59:04.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u5907_u8003_u611F_u53D7"><a href="#u5907_u8003_u611F_u53D7" class="headerlink" title="备考感受"></a>备考感受</h3><p>学校申请告一段落了，借着换工作的空挡回过头来看看自己走过的路程。</p>
<p>从2016年后上班开始着手准备，到17年5月把两个考试考完，GRE跟TOEFL的分数都不是很高，但是对申请的学校已经足够，并且这也是再一次证明牛逼的自己。整个备考过程是一次非常有意义的一段经历，现在回过头来看看，真的是跟拍AV一样，看的人很爽，做的人很辛苦啊。GRE一次过，在北航考点，不得不说环境对考试真的很重要，这个考点还是非常不错的。TOEFL一共考了4次，前3次每次提分3分，最后一次人品爆发，提了接近10分。</p>
<p>首先讨论的是否需要考试培训，我的建议是你可以先去知乎上看看牛人的回答，然后根据自己的实际情况要不要参加，如果你不差钱，建议可以报班，主要原因是你可以在班上看到很多漂亮的妹子跟帅哥。对我来说，参加培训只是一种手段，如果它能给你提分，那么就是有用的，如果培训后的分数跟自己准备考试成绩只相差3分的话，培训确实没有什么卵用，事实是我花了3000元就提高了3分。培训其实就是老师陪考生一起备考的过程，有些老师很优秀，你能从他们身上学到很多正能量东西，可能对你以后的人生都有不小的影响。</p>
<p>如果现在看到博客的你还是学生的话，有机会就去考一下。因为一旦你参加工作后在准备考试，这个过程还是蛮辛苦的，一边工作一边准备考试的感觉是非常爽的。</p>
<h3 id="u6750_u6599_u5206_u4EAB"><a href="#u6750_u6599_u5206_u4EAB" class="headerlink" title="材料分享"></a>材料分享</h3><p>接下来是分享部分，如果你觉得有用，就请笑纳吧.</p>
<h4 id="GRE_u90E8_u5206"><a href="#GRE_u90E8_u5206" class="headerlink" title="GRE部分"></a>GRE部分</h4><p>GRE分两部分考试，通俗点来说就是语文跟数学。语文的话你就不要抱太大希望，因为里面的单词你真的不认识，数学倒是可以有几分把握。很尼玛讽刺的是我在数学部分的第一道题就不会做，当时就想着是不是有问题啊。不过方法就是第一题不会做，那就绕开直接做第二题呗，对吧。最后数学分数还是考了160分。跟平时训练的分数差不多。</p>
<p>阅读是一个量非常大的部分，不管你在国内的阅读有多牛逼，看看GRE的阅读你就知道之前阅读都是闹着玩的。</p>
<p>推荐几个拓宽阅读部分的网站，有些可能需要翻墙浏览。</p>
<ul>
<li><a href="https://www.usnews.com/" target="_blank" rel="external">美国新闻</a></li>
<li><a href="http://www.economist.com/" target="_blank" rel="external">经济学家</a></li>
<li><a href="http://reason.com/" target="_blank" rel="external">Reason</a></li>
<li><a href="https://www.theatlantic.com/world/" target="_blank" rel="external">Atlantic世界</a></li>
<li><a href="http://www.newyorker.com/" target="_blank" rel="external">纽约客</a></li>
<li><a href="https://www.foreignaffairs.com/" target="_blank" rel="external">Foreigna Affairs</a></li>
<li><a href="http://www.huffingtonpost.com/" target="_blank" rel="external">赫芬顿邮报</a></li>
</ul>
<p>自己在准备考试的时候会结合听说读写</p>
<ul>
<li><a href="https://www.voanews.com/z/1447" target="_blank" rel="external">VOA</a>的一个妹纸Carol Castiel，说话声音非常好听</li>
<li><a href="http://www.bbc.co.uk/radio/categories/news" target="_blank" rel="external">BBC</a>的也还是不错的，你有时间的话，可以尽量模仿里面的语音语调，可能对以后会有所帮助</li>
</ul>
<p>分析性写作分为两部分，一个叫<a href="https://www.ets.org/gre/revised_general/prepare/analytical_writing/issue/pool" target="_blank" rel="external">Issue</a>，另一个叫<a href="https://www.ets.org/gre/revised_general/prepare/analytical_writing/argument/pool" target="_blank" rel="external">Argument</a>，你可以在这里找到相应的题目，有时间可以多看看，反正多多益善嘛。</p>
<p>词汇量部分的准备</p>
<ul>
<li><a href="https://quizlet.com/flios" target="_blank" rel="external">baby one</a></li>
<li><a href="https://quizlet.com/sk1225" target="_blank" rel="external">baby two</a></li>
<li><a href="https://quizlet.com/MatRush" target="_blank" rel="external">baby three</a></li>
<li><a href="https://quizlet.com/Yaniqueleshae/folders/magoosh-gre/sets" target="_blank" rel="external">baby four</a></li>
<li><a href="https://quizlet.com/omour001/folders/gre/sets" target="_blank" rel="external">baby five</a></li>
<li><a href="https://quizlet.com/saurabh_saini" target="_blank" rel="external">baby six</a></li>
<li><a href="https://quizlet.com/aviyou" target="_blank" rel="external">baby seven</a></li>
<li><a href="https://quizlet.com/viviawang/folders/arjeshwar/sets" target="_blank" rel="external">baby eight</a></li>
<li><a href="https://quizlet.com/JRaimondi" target="_blank" rel="external">baby nine</a></li>
<li><a href="https://crunchprep.com/gre/2014/101-high-frequency-gre-words" target="_blank" rel="external">baby ten</a></li>
<li><a href="https://quizlet.com/wynace" target="_blank" rel="external">再要你命3000</a></li>
</ul>
<h4 id="TOEFL_u90E8_u5206"><a href="#TOEFL_u90E8_u5206" class="headerlink" title="TOEFL部分"></a>TOEFL部分</h4><p>TOEFL 准备部分</p>
<p>托福到我考试的时候又改版了，以前都是听力加试，而且加试的题目大家都可以在网上找得到。现在不需要找了，因为听力加试都不考经典了，而且很有可能是阅读加试，我碰到的阅读加试，一下就把我搞蒙蔽了，到听力部分完全就不行了，所以建议大家在准备时候一定要考虑到自己有可能连着做4篇阅读。备考时记得使用的app有 智课斩托福，还有<del>~</del>~</p>
<ul>
<li><a href="https://quizlet.com/Rossteacher03" target="_blank" rel="external">love baby</a></li>
<li><a href="https://quizlet.com/nguyen_ndk" target="_blank" rel="external">love love baby</a></li>
</ul>
<h3 id="u5907_u8003_u5BC4_u8BED"><a href="#u5907_u8003_u5BC4_u8BED" class="headerlink" title="备考寄语"></a>备考寄语</h3><p>无论你参加了多少次的GRE和托福考试，只要考到了你自己要的分数，其他的都是浮云。无论工作还是考试，大家都只看结果，所以你就放开了去干，因为现在自己没有什么可以失去的，所以只需要专心把手头上的事情做好就行。最后祝即将参加考试的童鞋们考到好分数，旗开得胜。</p>
<p>时隔几个月之后再来看看自己的申请之路，可谓是刺痛到自己的心了。已经面签4次，都被拒接了。本以为一个很简单的事情现在真的非常复杂，而且还不知道后面有没有机会过去了。我也只是想说很不值得，一开始自己没有想到会有这样的后果，没想到很多的东西造成现在的这种局面。到最后还是自己去一步一步的搞定。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u5907_u8003_u611F_u53D7"><a href="#u5907_u8003_u611F_u53D7" class="headerlink" title="备考感受"></a>备考感受</h3><p>学校申请告一段落了，借着换工作的空挡回过头来看看]]>
    </summary>
    
      <category term="exam" scheme="http://www.darcywang.com/tags/exam/"/>
    
      <category term="life" scheme="http://www.darcywang.com/tags/life/"/>
    
      <category term="TOEFL" scheme="http://www.darcywang.com/categories/TOEFL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[聊聊CSS的Flexboxs吧]]></title>
    <link href="http://www.darcywang.com/2017/03/02/how-flexboxs-works/"/>
    <id>http://www.darcywang.com/2017/03/02/how-flexboxs-works/</id>
    <published>2017-03-02T08:09:03.000Z</published>
    <updated>2017-03-02T12:39:12.000Z</updated>
    <content type="html"><![CDATA[<p>随着各大浏览器开始支持CSS3的新属性，比如flexbox。flexbox号称可以将我们从css tricks里面解放出来，比如说垂直居中。当然，flexbox正朝着这个目标前进着，但首先是很好的使用它。在接下来的文章里面会用gif动图来解释布局，这样我们可以更好地理解和使用它。</p>
<p>flexbox内置的规则可以让我们在整体布局更加的灵活跟直观，它让父容器来决定如何展示子类div，包括它们的大小以及相互的间距。听起来是不是很神奇，那就让我们来实操吧。</p>
<p>在这篇文章中我们仔细讨论flexbox的5个常用属性以及属性值。</p>
<h3 id="u5C5E_u6027_u4E00_uFF1A_Display_3A_Flex"><a href="#u5C5E_u6027_u4E00_uFF1A_Display_3A_Flex" class="headerlink" title="属性一： Display: Flex"></a>属性一： Display: Flex</h3><p><img src="http://7xpb8g.com1.z0.glb.clouddn.com/first.gif" alt=""><br>你可以发现有4个不同形状，不同颜色的div被包裹在一个灰色的container里面，每个div默认展示display:block，每个小盒子都会占据一行。</p>
<p>现在你可以将外层包裹的container添加属性，代码如此简单<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="id">#container</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value"> flex</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="http://7xpb8g.com1.z0.glb.clouddn.com/second.gif" alt=""><br>是不是很神奇，所有的小盒子都好像添加了一个display：inline-block的属性，那就对了。事实是你做的远不止这一点，你给了container一种叫做flex环境，<br>你现在可以开始操作div的位置了，相比于传统的css更少的代码。</p>
<h3 id="u5C5E_u6027_u4E8C_uFF1A_Flex_Direction"><a href="#u5C5E_u6027_u4E8C_uFF1A_Flex_Direction" class="headerlink" title="属性二： Flex Direction"></a>属性二： Flex Direction</h3><p>一个Flexbox container有两个轴，横轴(main axis)和纵轴(cross axis)，如下图所示。<br><img src="http://7xpb8g.com1.z0.glb.clouddn.com/third.png" alt=""><br>默认情况下，div会沿着横轴排列，从左至右，这也就是为什么一开始给container添加属性后，子类div会这样排列。但是Flex-direction会让你来控制div的排列方向。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="id">#container</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value"> flex</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">flex-direction</span>:<span class="value"> column</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="http://7xpb8g.com1.z0.glb.clouddn.com/four.gif" alt=""><br>非常需要注意的地方是当你使用flex-direction: column后，子类div会按照纵轴来排列，从横轴转为纵轴排列。flex-direction还有其它几个属性值，比如row-reverse和column-reverse.<br><img src="http://7xpb8g.com1.z0.glb.clouddn.com/five.gif" alt=""></p>
<h3 id="u5C5E_u6027_u4E09_uFF1A_Justify_Content"><a href="#u5C5E_u6027_u4E09_uFF1A_Justify_Content" class="headerlink" title="属性三： Justify Content"></a>属性三： Justify Content</h3><p>Justify-content控制盒子在横轴上的展示，让我们看看下面的图片<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="id">#container</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value"> flex</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">flex-direction</span>:<span class="value"> row</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">justify-content</span>:<span class="value"> flex-start</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>justify-content:一共有5个属性值</p>
<ul>
<li>Flex-start</li>
<li>Flex-end</li>
<li>Center</li>
<li>Space-between</li>
<li>Space-around<br><img src="http://7xpb8g.com1.z0.glb.clouddn.com/six.gif" alt=""></li>
</ul>
<p>在这里需要重点强调一下space-around和space-between, 在gif图中对比我们可以理解为，当属性值为space-around时, 子类每个div的左右间距都相等, space-between的情况下, 简单来说。就是每个盒子都有自己的个性.<br>还记得justify-content是作用在横轴上面的，如果需要作用在纵轴上，你会想当然把flex-direction改成column不就完事儿了么，答案是否定的，这就是接下来我要介绍的属性</p>
<h3 id="u5C5E_u6027_u56DB_uFF1A_Align_Items"><a href="#u5C5E_u6027_u56DB_uFF1A_Align_Items" class="headerlink" title="属性四： Align Items"></a>属性四： Align Items</h3><p>如果你掌握了justify-content的精髓，那align-items就是小菜一碟.justify-content是作用在横轴, 那么align-items就是作用在纵轴<br><img src="http://7xpb8g.com1.z0.glb.clouddn.com/third.png" alt=""><br>align-items有5个属性值</p>
<ul>
<li>flex-start</li>
<li>flex-end</li>
<li>center</li>
<li>stretch</li>
<li>baseline<br>相比于justify-content，还是有那么一点不一样的，仔细看下图<br><img src="http://7xpb8g.com1.z0.glb.clouddn.com/seven.gif" alt=""><br>注意align-items: stretch 我已经对所有盒子的高度设定为auto<br>对于属性值为baseline时，要注意段落标签它会以盒子的最低靠齐.<br><img src="http://7xpb8g.com1.z0.glb.clouddn.com/eight.png" alt=""><br>为了更加直观和全面的理解，请看下图<br><img src="http://7xpb8g.com1.z0.glb.clouddn.com/nine.gif" alt=""><h3 id="u5C5E_u6027_u4E94_uFF1A_Align_Self"><a href="#u5C5E_u6027_u4E94_uFF1A_Align_Self" class="headerlink" title="属性五： Align Self"></a>属性五： Align Self</h3>Align-self允许手动的对某个元素进行控制，<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#container &#123;</span><br><span class="line">    align-items: flex-start;</span><br><span class="line">&#125;</span><br><span class="line">.square#one &#123;</span><br><span class="line">    align-self: center;</span><br><span class="line">&#125;</span><br><span class="line">// Only this square will be centered.</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>如下图所示，我们对前面两个盒子不做控制,后面两个设置align-items: center and flex-direction: row.<br><img src="http://7xpb8g.com1.z0.glb.clouddn.com/nine.gif" alt=""><br>结论：<br>即使你只听说过flexbox，但熟悉完这些属性跟属性值后，你将完全有能力将之付诸于实践，去实现垂直居中你的内心.</p>
<p>参考资源<br><a href="https://medium.freecodecamp.com/an-animated-guide-to-flexbox-d280cf6afc35#.wtm4q2a79" target="_blank" rel="external">https://medium.freecodecamp.com/an-animated-guide-to-flexbox-d280cf6afc35#.wtm4q2a79</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>随着各大浏览器开始支持CSS3的新属性，比如flexbox。flexbox号称可以将我们从css tricks里面解放出来，比如说垂直居中。当然，flexbox正朝着这个目标前进着，但首先是很好的使用它。在接下来的文章里面会用gif动图来解释布局，这样我们可以更好地理解和使]]>
    </summary>
    
      <category term="CSS3" scheme="http://www.darcywang.com/tags/CSS3/"/>
    
      <category term="Techniques" scheme="http://www.darcywang.com/categories/Techniques/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[GRE and Toefl]]></title>
    <link href="http://www.darcywang.com/2016/11/04/TOEFL/"/>
    <id>http://www.darcywang.com/2016/11/04/TOEFL/</id>
    <published>2016-11-04T11:44:42.000Z</published>
    <updated>2018-08-16T05:38:17.000Z</updated>
    <content type="html"><![CDATA[<p>从2016年9月24日到2017年5月13日，一共经历了四次考试。最开始的68分到86分，这个过程还是非常艰辛的。我在这里想分享自己的几点心得。</p>
<ol>
<li>参加考试的时候真的不要想太多，认真考试就行了。</li>
<li>托福考试就是强奸与被强奸，你如果准备足够充分，那没问题，就直接把托福给上了。</li>
<li>还有一些资料可以和大家分享一下</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>从2016年9月24日到2017年5月13日，一共经历了四次考试。最开始的68分到86分，这个过程还是非常艰辛的。我在这里想分享自己的几点心得。</p>
<ol>
<li>参加考试的时候真的不要想太多，认真考试就行了。</li>
<li>托福考试就是强奸与被强奸，你如果准备]]>
    </summary>
    
      <category term="Self-learning" scheme="http://www.darcywang.com/tags/Self-learning/"/>
    
      <category term="English" scheme="http://www.darcywang.com/categories/English/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS3--浅析REM]]></title>
    <link href="http://www.darcywang.com/2016/06/01/CSS3--%E6%B5%85%E6%9E%90REM/"/>
    <id>http://www.darcywang.com/2016/06/01/CSS3--浅析REM/</id>
    <published>2016-06-01T07:08:45.000Z</published>
    <updated>2017-07-05T02:05:29.000Z</updated>
    <content type="html"><![CDATA[<p>CSS开发中，时常会遇到em、rem、vh等等一些单位，在项目实践里却由于对它们的不熟悉以及不确定性而没有经常地的使用，今天有机会和大家一起认识其中的REM。</p>
<h3 id="u521D_u8BC6_REM"><a href="#u521D_u8BC6_REM" class="headerlink" title="初识 REM"></a>初识 REM</h3><blockquote>
<p>In Cascading Style Sheets, the em unit is the height of the font in nominal points or inches. The actual, physical height of any given portion of the font depends on the user-defined DPI setting, current element font-size, and the particular font being used.</p>
<p>To make style rules that depend only on the default font size, another unit was developed: the rem. The rem, or root em, is the font size of the root element of the document. Unlike the em, which may be different for each element, the rem is constant throughout the document.</p>
</blockquote>
<p>先看一下<a href="https://en.wikipedia.org/wiki/Em_(typography)#CSS" target="_blank" rel="external">维基百科</a>对CSS中的REM定义，在CSS样式表中，单位em是作为字体高度的单位来使用的，但实际字体大小的高度显示是用户对DPI的定义来决定的。为了改善这种样式规则，单位rem则是直接取决于文档根元素字体默认大小，也可以理解为root em，跟em有所不同的是使用rem单位的字体大小在整个文档中都是恒定不变的</p>
<blockquote>
<p><strong>Font-relative lengths: the em, ex, ch, rem units</strong><br>Aside from rem (which refers to the font-size of the root element), the font-relative lengths refer to the font metrics of the element on which they are used. The exception is when they occur in the value of the font-size property itself, in which case they refer to the computed font metrics of the parent element (or the computed font metrics corresponding to the initial values of the font property, if the element has no parent).</p>
</blockquote>
<p>看看<a href="https://www.w3.org/TR/css3-values/#font-relative-lengths" target="_blank" rel="external">W3C</a>的定义，rem指的是根元素的字体大小，<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/length" target="_blank" rel="external">MDN</a>对rem的解释也是一样。REM在CSS中基本概念是字体相对大小的长度单位，同EM、PX相似，但又有着千丝万缕的关系</p>
<h3 id="REM_u4F7F_u7528_u53CA_u6CE8_u610F_u4E8B_u9879"><a href="#REM_u4F7F_u7528_u53CA_u6CE8_u610F_u4E8B_u9879" class="headerlink" title="REM使用及注意事项"></a>REM使用及注意事项</h3><p>在rem使用之前，先得捋清楚单位em、rem和px之间的关系，特别是每一个单位的使用跟代码块和继承之间的关系。<br>A. <a href="http://codepen.io/jeremychurch/pen/rCcIh" target="_blank" rel="external">http://codepen.io/jeremychurch/pen/rCcIh</a><br>b. <a href="http://codepen.io/jeremychurch/pen/dlyqw" target="_blank" rel="external">http://codepen.io/jeremychurch/pen/dlyqw</a><br>参考上面两个简单的栗子，第一个里面的字体大小依次在减小，而第二个里面的字体却恒定没有变化，相对比会发现只是单位使用不一样的但效果是截然不同的。rem和em都是相对单位，px则不是。<br>为什么会产生这样不同的效果呢，答案需要回到rem的定义上。单位rem是相对根元素字体大小的，根元素是指body或者html，如果没有声明根元素字体大小，那么单位rem默认是等于16px;<a href="http://pxtoem.com/" target="_blank" rel="external">这里</a>可以进行em、rem和px的换算。在实际项目中使用单位rem是需要这样定义的。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">body</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">62.5%</span></span></span>; &#125;</span>  <span class="comment">/* =10px */</span></span><br><span class="line"><span class="tag">h1</span>   <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">2.4em</span></span></span>; &#125;</span> <span class="comment">/* =24px */</span></span><br><span class="line"><span class="tag">p</span>    <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">1.4em</span></span></span>; &#125;</span> <span class="comment">/* =14px */</span></span><br><span class="line"><span class="tag">li</span>   <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">1.4em</span></span></span>; &#125;</span> <span class="comment">/* =14px */</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">html</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">62.5%</span></span></span>; &#125;</span>  <span class="comment">/* =10px */</span></span><br><span class="line"><span class="tag">body</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">1.4rem</span></span></span>; &#125;</span> <span class="comment">/* =14px */</span></span><br><span class="line"><span class="tag">h1</span>   <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">2.4rem</span></span></span>; &#125;</span> <span class="comment">/* =24px */</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">html</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">62.5%</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">14px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">1.4rem</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">24px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">2.4rem</span></span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p></p><p data-height="265" data-theme-id="dark" data-slug-hash="ZOYVLY" data-default-tab="html" data-user="darcyWang" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/darcyWang/pen/ZOYVLY/" target="_blank" rel="external">ZOYVLY</a> by TianbaoWang (<a href="http://codepen.io/darcyWang" target="_blank" rel="external">@darcyWang</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<p><script async src="//assets.codepen.io/assets/embed/ei.js"></script></p>
<h3 id="REM__u6DF1_u5165"><a href="#REM__u6DF1_u5165" class="headerlink" title="REM 深入"></a>REM 深入</h3><p>使用em的好处，响应式布局下的字体大小变化<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Only px units */</span></span><br><span class="line"><span class="tag">html</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">16px</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h1</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">33px</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h2</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">28px</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h3</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">23px</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h4</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">19px</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">small</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">13px</span></span></span>; &#125;</span></span><br><span class="line"><span class="class">.box</span> <span class="rules">&#123; <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">20px</span></span></span>; &#125;</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen and (min-width: <span class="number">1400px</span>) </span>&#123;</span><br><span class="line"><span class="tag">html</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">20px</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h1</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">41px</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h2</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">35px</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h3</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">29px</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h4</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">24px</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">small</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">17px</span></span></span>; &#125;</span></span><br><span class="line"><span class="class">.box</span> <span class="rules">&#123; <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">25px</span></span></span>; &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Use em units */</span></span><br><span class="line"><span class="tag">html</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">1em</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h1</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">2.074em</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h2</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">1.728em</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h3</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">1.44em</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">h4</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">1.2em</span></span></span>; &#125;</span></span><br><span class="line"><span class="tag">small</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">0.833em</span></span></span>; &#125;</span></span><br><span class="line"><span class="class">.box</span> <span class="rules">&#123; <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">1.25em</span></span></span>; &#125;</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen and (min-width: <span class="number">1400px</span>) </span>&#123;</span><br><span class="line">  <span class="tag">html</span> <span class="rules">&#123; <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">1.25em</span></span></span>; &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>上面展示了单位em在媒体查询中的使用，代码量相当于单位px的一半！用到的是单位em的继承和<br>相对父级(例子里面的html)字体大小。当单位em字体大小是相对直接或者是最近的父级，但单位rem的大小则是相对于html(根元素)字体大小，也可以把它理解为一种样式重置。那为什么要使用rem呢，这就像问你Less、Sass和Postcss到底哪个更好一样，举个栗子：margin: 50px 0;和margin: 5rem 0;在很多国外程序员写出的css中，不管是写sass或者是stylus的，他们更偏向于后一种写法，还有当看到别人的样式表中用着不同的单位，会不会有一种逼格的赶脚。<br>对em、rem和px的使用也不是绝对孰好孰坏，最好的方式就是同时使用，在对的地方使用对的单位，之前有人在<a href="http://stackoverflow.com/questions/11799236/should-i-use-px-or-rem-value-units-in-my-css" target="_blank" rel="external">stackoverflow</a>问过使用相对单位，个人推荐多使用单位em，可以用px来写border，rem则可以用margin或者padding之类的，不过还是需要慎用<a href="http://caniuse.com/#feat=rem" target="_blank" rel="external">IE9,10</a>都不完全支持rem，给大家推荐一个sublime的<a href="https://github.com/flashlizi/cssrem" target="_blank" rel="external">插件</a></p>
<p></p><p data-height="265" data-theme-id="dark" data-slug-hash="XKJxxY" data-default-tab="html" data-user="darcyWang" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/darcyWang/pen/XKJxxY/" target="_blank" rel="external">CSS rem</a> by TianbaoWang (<a href="http://codepen.io/darcyWang" target="_blank" rel="external">@darcyWang</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<p><script async src="//assets.codepen.io/assets/embed/ei.js"></script></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>CSS开发中，时常会遇到em、rem、vh等等一些单位，在项目实践里却由于对它们的不熟悉以及不确定性而没有经常地的使用，今天有机会和大家一起认识其中的REM。</p>
<h3 id="u521D_u8BC6_REM"><a href="#u521D_u8BC6_REM" c]]>
    </summary>
    
      <category term="CSS3" scheme="http://www.darcywang.com/tags/CSS3/"/>
    
      <category term="FullStack" scheme="http://www.darcywang.com/categories/FullStack/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[H5与原生交互那点事儿]]></title>
    <link href="http://www.darcywang.com/2016/05/25/H5-vs-native/"/>
    <id>http://www.darcywang.com/2016/05/25/H5-vs-native/</id>
    <published>2016-05-25T04:22:26.000Z</published>
    <updated>2017-07-05T02:11:23.000Z</updated>
    <content type="html"><![CDATA[<p>聊一下关于H5、Android和iOS的交互。</p>
<p>支付宝支付需要参数的传递，问题的解决<br>首先是iOS需要建立一个UIWebView，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#import "webview.h"</span></span><br><span class="line"><span class="comment">#import &lt;javascriptcore javascriptcore.h=""&gt;</span></span><br><span class="line">@implementation webview</span><br><span class="line"></span><br><span class="line">-(id)initWithFrame:(CGRect)frame</span><br><span class="line">&#123;</span><br><span class="line">    self=[super initWithFrame:frame];</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span>( self )&#123;</span><br><span class="line">        self.webview=[[UIWebView alloc]initWithFrame:CGRectMake(<span class="number">0</span>, <span class="number">310</span>, self.bounds.size.width, <span class="number">300</span>)];</span><br><span class="line">        self.webview.backgroundColor=[UIColor lightGrayColor];</span><br><span class="line">        NSString *htmlPath=[[NSBundle mainBundle] resourcePath];</span><br><span class="line">        htmlPath=[htmlPath stringByAppendingPathComponent:@<span class="string">"html/index.html"</span>];</span><br><span class="line">        NSURL *<span class="built_in">local</span>URL=[[NSURL alloc]initFileURLWithPath:htmlPath];</span><br><span class="line">        [self.webview loadRequest:[NSURLRequest requestWithURL:<span class="built_in">local</span>URL]];</span><br><span class="line">        [self addSubview:self.webview];</span><br><span class="line"> </span><br><span class="line">        JSContext *context = [self.webview valueForKeyPath:@<span class="string">"documentView.webView.mainFrame.javaScriptContext"</span>];</span><br><span class="line">        // 这个全是objective-c代码写的，下面会有详解</span><br><span class="line">        context[@<span class="string">"appointment"</span>] = ^() &#123;</span><br><span class="line">            NSLog(@<span class="string">"+++++++start Log+++++++"</span>);</span><br><span class="line">            NSArray *args = [JSContext currentArguments];</span><br><span class="line">            <span class="keyword">for</span> (JSValue *jsVal <span class="keyword">in</span> args) &#123;</span><br><span class="line">                NSLog(@<span class="string">"%@"</span>, jsVal);</span><br><span class="line">            &#125;</span><br><span class="line">            JSValue *this = [JSContext currentThis];</span><br><span class="line">            NSLog(@<span class="string">"this: %@"</span>,this);</span><br><span class="line">            NSLog(@<span class="string">"-------finish Log-------"</span>);</span><br><span class="line">        &#125;;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> self;</span><br><span class="line">&#125;</span><br><span class="line">@end&lt;/javascriptcore&gt;</span><br></pre></td></tr></table></figure></p>
<p>前端想把支付宝的参数传给iOS，问题就出在iOS怎么能拿到前端传递过来的数据，javascript直接调用oc代码而非通过改变url回调方式，最重要的地方是和H5约定好执行函数的名称。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">context[@<span class="string">"appointment"</span>] = ^() &#123;</span><br><span class="line">    NSLog(@<span class="string">"-------Start Test-------"</span>);</span><br><span class="line">    NSArray *args = [JSContext currentArguments];</span><br><span class="line">    <span class="keyword">for</span> (JSValue *jsVal <span class="keyword">in</span> args) &#123;</span><br><span class="line">        NSLog(@<span class="string">"%@"</span>, jsVal);</span><br><span class="line">    &#125;</span><br><span class="line">    JSValue *this = [JSContext currentThis];</span><br><span class="line">    NSLog(@<span class="string">"-------Finish Test-------"</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>前端的代码，看到下面的appointment没，一旦触发testClick()后，就会执行上面那段oc代码，iOS就能够拿到支付所需要的参数。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">testClick</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    appointment(<span class="string">'&#123;"paramOne":"'</span>+paramOne+<span class="string">'","paramTwo":"'</span>+paramTwo+<span class="string">'","paramThree":"'</span>+paramThree+<span class="string">'"&#125;'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">@JavascriptInterface</span><br><span class="line">public void get_payinfo(String paramOne, String paramTwo, String paramThree) &#123;</span><br><span class="line">    payInforEntity=PayInforEntity.getInstance();</span><br><span class="line">    payInforEntity.paytype=<span class="string">"支付宝"</span>;</span><br><span class="line">    payInforEntity.paramOne=paramOne;</span><br><span class="line">    payInforEntity.paramTwo=paramTwo;</span><br><span class="line">    payInforEntity.paramThree=paramThree;</span><br><span class="line">    ······</span><br><span class="line">    String orderInfo = <span class="string">"paramOne="</span> + <span class="string">"\""</span> + paramOne + <span class="string">"\""</span>;</span><br><span class="line"></span><br><span class="line">    orderInfo += <span class="string">"&amp;paramTwo="</span> + <span class="string">"\""</span> + paramTwo + <span class="string">"\""</span>;</span><br><span class="line"></span><br><span class="line">    orderInfo += <span class="string">"&amp;paramThree="</span> + <span class="string">"\""</span> + paramThree.replace(<span class="string">"T"</span>, <span class="string">" "</span>) + <span class="string">"\""</span>;</span><br><span class="line"></span><br><span class="line">    orderInfo += <span class="string">"&amp;····="</span> + <span class="string">"\""</span> + ···· + <span class="string">"\""</span>;</span><br><span class="line"></span><br><span class="line">    final String finalOrderInfo = orderInfo;</span><br><span class="line">    Runnable payRunnable = new <span class="function"><span class="title">Runnable</span></span>() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        public void <span class="function"><span class="title">run</span></span>() &#123;</span><br><span class="line">            // 构造PayTask 对象</span><br><span class="line">            PayTask alipay = new PayTask(Resume_ToTopActivity.this);</span><br><span class="line">            // 调用支付接口，获取支付结果</span><br><span class="line">            String result = alipay.pay(finalOrderInfo, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            Message msg = new Message();</span><br><span class="line">            msg.what = SDK_PAY_FLAG;</span><br><span class="line">            msg.obj = result;</span><br><span class="line">            mHandler.sendMessage(msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    // 必须异步调用</span><br><span class="line">    Thread payThread = new Thread(payRunnable);</span><br><span class="line">    payThread.start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@JavascriptInterface</span><br><span class="line">public void get_WXpayInfo(String paramOne, String paramTwo, String paramThree) throws Exception &#123;</span><br><span class="line">    payInforEntity=PayInforEntity.getInstance();</span><br><span class="line">    payInforEntity.paytype=<span class="string">"微信"</span>;</span><br><span class="line">    payInforEntity.paramOne=paramOne;</span><br><span class="line">    payInforEntity.paramTwo=paramTwo;</span><br><span class="line">    payInforEntity.paramThree=paramThree;</span><br><span class="line">    ······</span><br><span class="line">    <span class="keyword">if</span> (!isWeixinAvilible(Resume_ToTopActivity.this)) &#123;</span><br><span class="line">        Weixin_Download = ViewUtils.Weixin_Download(Resume_ToTopActivity.this);</span><br><span class="line">        Weixin_Download.show();</span><br><span class="line">        Toast.makeText(Resume_ToTopActivity.this,<span class="string">"请安装微信"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">        <span class="built_in">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    api = WXAPIFactory.createWXAPI(Resume_ToTopActivity.this, <span class="string">"·····"</span>);</span><br><span class="line">    api.registerApp(<span class="string">"·····"</span>);</span><br><span class="line">    String url = <span class="string">"http://wxpay.weixin.qq.com/pub_v2/app/app_pay.php?plat=android"</span>;</span><br><span class="line">    PayReq req = new PayReq();</span><br><span class="line">    req.appId = <span class="string">"·····"</span>;</span><br><span class="line">    req.partnerId = partnerId;</span><br><span class="line">    req.prepayId = prepayId;</span><br><span class="line">    req.nonceStr = nonceStr;</span><br><span class="line">    req.timeStamp = timeStamp;</span><br><span class="line">    req.packageValue = <span class="string">"Sign=WXPay"</span>;</span><br><span class="line">    req.sign = sign;</span><br><span class="line">    Toast.makeText(Resume_ToTopActivity.this, <span class="string">"正常调起支付"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    // 在支付之前，如果应用没有注册到微信，应该先调用IWXMsg.registerApp将应用注册到微信</span><br><span class="line">    api.sendReq(req);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>聊一下关于H5、Android和iOS的交互。</p>
<p>支付宝支付需要参数的传递，问题的解决<br>首先是iOS需要建立一个UIWebView，<br><figure class="highlight bash"><table><tr><td class="gutte]]>
    </summary>
    
      <category term="移动端" scheme="http://www.darcywang.com/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
      <category term="FullStack" scheme="http://www.darcywang.com/categories/FullStack/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[性能优化之CSS部分]]></title>
    <link href="http://www.darcywang.com/2016/02/23/my-css/"/>
    <id>http://www.darcywang.com/2016/02/23/my-css/</id>
    <published>2016-02-23T09:40:54.000Z</published>
    <updated>2016-03-24T09:28:20.000Z</updated>
    <content type="html"><![CDATA[<p>在上一篇chrome调试里面讲到了渲染对页面的性能是非常关键的，其中就包括CSS。</p>
<p>从最原始的CSS代码到CSS3，后来的LESS、Sass、Stylus到现在的PostCSS，这门语言已经远远不是那么简单的。但也许有人会说，只要写出的CSS达到UI设计图一模一样的样式不就行了么，答案是肯定的，没有人会去关心产品是怎么实现的，除了你自己。</p>
<p>这里就不再教大家怎么去写CSS了，而是一起讨论一下专业CSS都有哪几点。</p>
<h3 id="u5C5E_u6027_u7684_u4F7F_u7528"><a href="#u5C5E_u6027_u7684_u4F7F_u7528" class="headerlink" title="属性的使用"></a>属性的使用</h3><p>CSS常用属性不是特别多，所以上手也非常快。随着CSS3新增的一些动画属性，可能在低版本浏览器不识别，但现在都什么年代了，不需要担心太多。<br>有个网站<a href="https://csstriggers.com/" target="_blank" rel="external">CSSTrigger</a>已经非常详细的介绍了每一个属性会不会触发layout事件，还有一些相应的注意事项。之前听说过有些公司的前端样式书写需要遵循先定位然后是字体颜色之类的，但现实是没有几个人会真的按照这上面去做，原因很简单，每个工程师都会有自己的习惯，再说现在CSS的伪类已经非常强大。</p>
<p>如何对属性来进行优化呢，答案是多种多样的。这里举一个优化绘制的例子，</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/* The bad way */</span><br><span class="line">.normal_way &#123;</span><br><span class="line">  box-shadow: 0 1px 2px rgba(0,0,0,0.15);</span><br><span class="line">  transition: box-shadow 0.3s ease-in-out:</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 鼠标悬停实现更大阴影的过渡 */</span><br><span class="line">.normal_way:hover &#123;</span><br><span class="line">  box-shadow: 0 5px 15px rgba(0,0,0,0.3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* The alternate way */</span><br><span class="line">.better_way &#123;</span><br><span class="line">  box-shadow: 0 1px 2px rgba(0,0,0,0.15);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 设置更大的阴影并将之隐藏 */</span><br><span class="line">.better_way::after &#123;</span><br><span class="line">  box-shadow: 0 5px 15px rgba(0,0,0,0.3);</span><br><span class="line">  opacity: 0;</span><br><span class="line">  transition: opacity 0.3s ease-in-out:</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 鼠标悬停时实现更大阴影的过渡显示 */</span><br><span class="line">.make-it-fast:hover::after &#123;</span><br><span class="line">  opacity: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>实现最小的重新绘制，应该创建一个伪元素并对其opacity元素进行动画处理，使其以每秒60帧的动画模仿运动物体相同的效果。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不建议, 造成页面布局两次.</span></span><br><span class="line"><span class="keyword">var</span> newWidth = aDiv.offsetWidth + <span class="number">10</span>; <span class="comment">// 读</span></span><br><span class="line">aDiv.style.width = newWidth + <span class="string">'px'</span>; <span class="comment">// 写</span></span><br><span class="line"><span class="keyword">var</span> newHeight = aDiv.offsetHeight + <span class="number">10</span>; <span class="comment">// 读</span></span><br><span class="line">aDiv.style.height = newHeight + <span class="string">'px'</span>; <span class="comment">// 写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 建议, 只有一次页面布局.</span></span><br><span class="line"><span class="keyword">var</span> newWidth = aDiv.offsetWidth + <span class="number">10</span>; <span class="comment">// 读</span></span><br><span class="line"><span class="keyword">var</span> newHeight = aDiv.offsetHeight + <span class="number">10</span>; <span class="comment">// 读</span></span><br><span class="line">aDiv.style.width = newWidth + <span class="string">'px'</span>; <span class="comment">// 写</span></span><br><span class="line">aDiv.style.height = newHeight + <span class="string">'px'</span>; <span class="comment">// 写</span></span><br></pre></td></tr></table></figure>
<h3 id="u9009_u62E9_u5668_u7684_u9009_u53D6"><a href="#u9009_u62E9_u5668_u7684_u9009_u53D6" class="headerlink" title="选择器的选取"></a>选择器的选取</h3><p>如果CSS的id、class名还是用拼音或者阿拉伯数字的盆友，请你先去学习英语基本3000词汇。</p>
<p>具体可以参考我的CSS3 blog。</p>
<h3 id="u5DE5_u5177_u7684_u4F7F_u7528"><a href="#u5DE5_u5177_u7684_u4F7F_u7528" class="headerlink" title="工具的使用"></a>工具的使用</h3><p>工欲善其事，必先利其器。选对了适合自己开发的工具，这样做起事来才能事半功倍。而且通过工具写出来的CSS代码可读性就不用说了，而且直接压缩后体积又小。这样无形中对CSS的优化又帮了一把手。</p>
<p>下面是3中CSS的写法，通过gulp来实现。其中需要的前提条件是你对node.js和gulp有一点的了解</p>
<h4 id="PostCSS"><a href="#PostCSS" class="headerlink" title="PostCSS"></a>PostCSS</h4><p>它将是未来取代传统CSS代码的的利器，很多的牛人写出了很牛逼的插件，比如说<a href="http://peterramsing.github.io/lost/" target="_blank" rel="external">lost</a>,<a href="http://simplaio.github.io/rucksack/docs/#" target="_blank" rel="external">rucksack</a>，使用它们比bootstrap强多了。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 测试新一代的CSS写法</span></span><br><span class="line">gulp.task(<span class="string">'styles'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> processors = [</span><br><span class="line">    lost,</span><br><span class="line">    rucksack,</span><br><span class="line">    prefixer_darcy(&#123; browsers: [<span class="string">'last 2 versions'</span>] &#125;),</span><br><span class="line">    csswring,</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'./assets/scss/darcy.css'</span>)</span><br><span class="line">    .pipe(postcss(processors))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./assets/css'</span>))</span><br><span class="line">    .pipe(reload(&#123;stream: <span class="literal">true</span>&#125;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h4 id="PostCSS_+_Sass"><a href="#PostCSS_+_Sass" class="headerlink" title="PostCSS + Sass"></a>PostCSS + Sass</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 测试新一代未来的CSS写法</span></span><br><span class="line">gulp.task(<span class="string">'presass'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> processors = [</span><br><span class="line">    precss(&#123;&#125;),</span><br><span class="line">    autoprefixer(&#123; browsers: [<span class="string">'last 2 versions'</span>] &#125;),</span><br><span class="line">    cssnext(&#123;compress: <span class="literal">true</span>&#125;)</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'./assets/scss/presass.css'</span>)</span><br><span class="line">    .pipe(postcss(processors))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./assets/css'</span>))</span><br><span class="line">    .pipe(notify(&#123; message: <span class="string">'presass task ok'</span> &#125;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="Sass"><a href="#Sass" class="headerlink" title="Sass"></a>Sass</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sass settings </span></span><br><span class="line">gulp.task(<span class="string">'sass'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> AUTOPREFIXER_BROWSERS = [</span><br><span class="line">      <span class="string">'ie &gt;= 8'</span>,</span><br><span class="line">      <span class="string">'ie_mob &gt;= 10'</span>,</span><br><span class="line">      <span class="string">'ff &gt;= 30'</span>,</span><br><span class="line">      <span class="string">'chrome &gt;= 34'</span>,</span><br><span class="line">      <span class="string">'safari &gt;= 7'</span>,</span><br><span class="line">      <span class="string">'opera &gt;= 23'</span>,</span><br><span class="line">      <span class="string">'ios &gt;= 7'</span>,</span><br><span class="line">      <span class="string">'android &gt;= 4.2'</span>,</span><br><span class="line">      <span class="string">'bb &gt;= 10'</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'assets/scss/linked.scss'</span>)</span><br><span class="line">    .pipe(sourcemaps.init())</span><br><span class="line">    .pipe(sass(&#123;outputStyle: <span class="string">'compressed'</span>&#125;)</span><br><span class="line">    .on(<span class="string">'error'</span>, errorlog))</span><br><span class="line">    .pipe(autoprefixer(AUTOPREFIXER_BROWSERS))</span><br><span class="line">    .pipe(sourcemaps.write(<span class="string">'../maps'</span>))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./assets/css'</span>))</span><br><span class="line">    .pipe(reload(&#123;stream:<span class="literal">true</span>&#125;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>还有需要大家注意的是配置里面会有很多的坑，因为你要明白gulp-autoprefixer跟autoprefixer不是一回事，还有是每次npm install的时候都会遇到gulp-sass中的node-sass中一个文件搞不下来，这个时候就需要你科学上网了。</p>
<p>一本书叫做<a href="http://chimera.labs.oreilly.com/books/1230000000545/index.html" target="_blank" rel="external">High Performance Browser Networking</a>，大家有时间可以去看一看，免费的</p>
<p>浏览器优化的一些demo地址<br><a href="https://github.com/udacity/web-workers-demo" target="_blank" rel="external">https://github.com/udacity/web-workers-demo</a><br><a href="http://udacity.github.io/news-aggregator/" target="_blank" rel="external">http://udacity.github.io/news-aggregator/</a><br><a href="http://andydavies.me/blog/2013/10/22/how-the-browser-pre-loader-makes-pages-load-faster/" target="_blank" rel="external">http://andydavies.me/blog/2013/10/22/how-the-browser-pre-loader-makes-pages-load-faster/</a><br><a href="http://udacity.github.io/60fps/lesson6/willChange/index.html" target="_blank" rel="external">http://udacity.github.io/60fps/lesson6/willChange/index.html</a><br><a href="https://gist.github.com/paulirish/1579671" target="_blank" rel="external">https://gist.github.com/paulirish/1579671</a><br><a href="http://www.html5rocks.com/static/demos/parallax/demo-1a/demo.html" target="_blank" rel="external">http://www.html5rocks.com/static/demos/parallax/demo-1a/demo.html</a><br><a href="https://github.com/udacity/news-aggregator/tree/gh-pages/hints" target="_blank" rel="external">https://github.com/udacity/news-aggregator/tree/gh-pages/hints</a><br><a href="https://github.com/udacity/news-aggregator" target="_blank" rel="external">https://github.com/udacity/news-aggregator</a><br><a href="https://github.com/udacity/news-aggregator/blob/gh-pages/hints/all-bugs.md" target="_blank" rel="external">https://github.com/udacity/news-aggregator/blob/gh-pages/hints/all-bugs.md</a><br><a href="https://github.com/udacity/news-aggregator/tree/solution" target="_blank" rel="external">https://github.com/udacity/news-aggregator/tree/solution</a><br><a href="https://dl.dropboxusercontent.com/u/2272348/codez/udacity/box-recalc-style-slow.html" target="_blank" rel="external">https://dl.dropboxusercontent.com/u/2272348/codez/udacity/box-recalc-style-slow.html</a><br><a href="https://github.com/udacity/frontend-nanodegree-mobile-portfolio" target="_blank" rel="external">https://github.com/udacity/frontend-nanodegree-mobile-portfolio</a></p>
<p><a href="https://github.com/google/ios-webkit-debug-proxy" target="_blank" rel="external">https://github.com/google/ios-webkit-debug-proxy</a></p>
<p>API的使用<a href="https://github.com/HackerNews/API" target="_blank" rel="external">https://github.com/HackerNews/API</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在上一篇chrome调试里面讲到了渲染对页面的性能是非常关键的，其中就包括CSS。</p>
<p>从最原始的CSS代码到CSS3，后来的LESS、Sass、Stylus到现在的PostCSS，这门语言已经远远不是那么简单的。但也许有人会说，只要写出的CSS达到UI设计图一模]]>
    </summary>
    
      <category term="CSS3" scheme="http://www.darcywang.com/tags/CSS3/"/>
    
      <category term="Techniques" scheme="http://www.darcywang.com/categories/Techniques/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Chrome调试工具]]></title>
    <link href="http://www.darcywang.com/2016/02/23/Chrome%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    <id>http://www.darcywang.com/2016/02/23/Chrome调试工具/</id>
    <published>2016-02-23T09:36:54.000Z</published>
    <updated>2017-11-28T07:30:17.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://www.google.com/chrome/browser/desktop/" target="_blank" rel="external">Chrome Developer Tools</a>是一件非常棒的艺术品。</p>
<h3 id="Chrome_DevTools_Overview"><a href="#Chrome_DevTools_Overview" class="headerlink" title="Chrome DevTools Overview"></a>Chrome DevTools Overview</h3><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/panl.png" alt=""><br>Elements：查看和编辑当前页面中的 HTML 和 CSS 元素。标签页的左侧就是对页面HTML结构的查看与编辑，<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以直接在某个元素上双击修改元素的属性，右侧可以对元素的CSS进行查看与编辑修改。<br>Console：用于显示异常错误信息，脚本中所输出的调试信息，或运行测试脚本等。<br>Sources：查看和调试当前页面所加载的脚本的源文件。<br>Network：监控当前网页所有的http请求的面版，主体部分展示每个http请求，每个字段表示着该请求的不同属性<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;和状态，当点击某一个具体请求URL，可以看到该请求的详细HTTP请求情况：</p>
<pre><code>1. Headers:  请求头信息和响应头信息
2. Preview:  预览结果，如果是文件可以查看这个文件；如果是图片可以预览这个图片；如果是从服务器返回来的JSON数据，可以查看格式话后的JSON
3. Response:  从服务器返回的响应结果
4. Cookies:  请求和响应的Cookie
5. Timing:  具体的响应时间
</code></pre><p>Timeline：查看脚本的执行时间、页面元素渲染时间等信息。提供了对于在加载Web应用的过程中，时间花费情况<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;的概览，包括处理DOM事件, 页面布局渲染和向屏幕绘制元素。<br>Profiles：查看 CPU 执行时间与内存占用等信息。<br>Resources：展示了当前页面所加载的资源列表，比如HTML、CSS。还有Cookie和Local Storage 、Session 等本地<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;存储信息，并且可以自由地修改、增加、删除本地存储。<br>Audits：用于优化前端页面，加速网页加载速度等。</p>
<h3 id="Chrome__u8C03_u8BD5_u5C0F_u6280_u5DE7"><a href="#Chrome__u8C03_u8BD5_u5C0F_u6280_u5DE7" class="headerlink" title="Chrome 调试小技巧"></a>Chrome 调试小技巧</h3><p>a. 文件快速切换  用快捷键Ctrl + P (Mac 上Cmd + P)就可以快速查找你的工程文件。<br>b. 源代码内部查找  如果不是想要搜索文件名，而是要查找源代码的内容，可以使用Ctrl + F (Cmd + F)并输入字符串关键词。而且在搜索的右侧有一个Replace的复选框，当选中后就可以实现替换了。<br>c. 文件跳转到某一行  当在Chrome DevTools中打开一个源文件后，你可以指定到任意一行，用快捷键Ctrl + O，并输入“：”+第几行。<br>d. 选中下一个出现位置  如果在源代码窗口中使用 Ctrl + D (Cmd + D) 键，那么当前词的下一个出现位置也会被选中，方便你同时进行调整</p>
<p>进一步了解<a href="http://www.xuanfengge.com/chrome-developer-tools-devtools-list-all-shortcuts-in.html" target="_blank" rel="external">可以参考</a></p>
<h3 id="Timeline_Part"><a href="#Timeline_Part" class="headerlink" title="Timeline Part"></a>Timeline Part</h3><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/timeline.jpg" alt=""></p>
<h4 id="u4ECE_u8F93_u5165URL_u5230_u9875_u9762_u52A0_u8F7D_u5B8C_u6210_u7684_u8FC7_u7A0B_u4E2D_u90FD_u53D1_u751F_u4E86_u4EC0_u4E48_u4E8B_u60C5_uFF1F"><a href="#u4ECE_u8F93_u5165URL_u5230_u9875_u9762_u52A0_u8F7D_u5B8C_u6210_u7684_u8FC7_u7A0B_u4E2D_u90FD_u53D1_u751F_u4E86_u4EC0_u4E48_u4E8B_u60C5_uFF1F" class="headerlink" title="从输入URL到页面加载完成的过程中都发生了什么事情？"></a>从输入URL到页面加载完成的过程中都发生了什么事情？</h4><ol>
<li>浏览器查找域名的 IP 地址</li>
<li>这一步包括 DNS 具体的查找过程，包括：浏览器缓存-&gt;系统缓存-&gt;路由器缓存…</li>
<li>浏览器向 web 服务器发送一个 HTTP 请求</li>
<li>服务器的永久重定向响应（从 <a href="http://example.com" target="_blank" rel="external">http://example.com</a> 到 <a href="http://www.example.com）" target="_blank" rel="external">http://www.example.com）</a></li>
<li>浏览器跟踪重定向地址</li>
<li>服务器处理请求</li>
<li>服务器返回一个 HTTP 响应</li>
<li>浏览器显示 HTML</li>
<li>浏览器发送请求获取嵌入在 HTML 中的资源（如图片、音频、视频、CSS、JS等等）</li>
<li>浏览器发送异步请求</li>
</ol>
<p>Timeline面板记录和分析了web应用运行时的所有活动情况，主要包括Loading events 加载事件，Scripting events 脚本执行事件，Rendering events 渲染事件，Painting events 绘制事件。</p>
<h4 id="u4E8B_u4EF6_u6A21_u5F0F"><a href="#u4E8B_u4EF6_u6A21_u5F0F" class="headerlink" title="事件模式"></a>事件模式</h4><p>事件模式提供以类型组织的记录期间捕获的所有事件的概览。大致能看出你的应用在什么类型的任务上的主要的时间消耗。这个视图中的水平条的长度对应于事件完成花费的时间长度。</p>
<h4 id="u5E27_u6A21_u5F0F"><a href="#u5E27_u6A21_u5F0F" class="headerlink" title="帧模式"></a>帧模式</h4><p>帧模式提供洞察应用的渲染性能的能力。一“帧”代表浏览器渲染一帧要显示的内容必须要做的工作–运行JavaScript、处理事件、更新DOM、改变样式布局和绘制页面。你的应用的目标是运行在每秒60帧下，对应于大多数（但不是全部）视频显示器的60Hz的刷新速率。因此，你的应用程序有大约16.6毫秒（1000毫秒/60）对每一帧做准备。<br>贯穿帧视图的水平线呈现60FPS和30FPS的帧速率目标。帧的高度对应于该帧渲染所花费的时间。每帧填充的颜色表明了每种类型的任务所花费的时间百分比。<br>渲染每帧花费的时间显示在记录试图的顶部。如果你把鼠标悬停在显示时间上，会显示帧的附属信息，包括每种类型的任务的时间、CPU时间、计算FPS的时间。<br><img src="http://7xr8la.com1.z0.glb.clouddn.com/frame.jpg" alt=""><br>页面代码是如何被转换成屏幕上显示的像素的? 这个转换过程可以归纳为这样的一个流水线，包含五个关键步骤：JS / CSS &gt; 计算样式 &gt; 布局 &gt; 绘制 &gt; 渲染层合并<br>每一帧都是经过上述的流水线处理之后渲染出来的，但并不意味着页面每一帧的渲染都需要经过上述五个步骤的处理。</p>
<h4 id="u5185_u5B58_u6A21_u5F0F"><a href="#u5185_u5B58_u6A21_u5F0F" class="headerlink" title="内存模式"></a>内存模式</h4><p>内存视图展示你的应用的随着时间内存使用情况，包括文档数、DOM节点数，以及在内存内的事件监听(未被垃圾回收的)。</p>
<h3 id="Audits_Part"><a href="#Audits_Part" class="headerlink" title="Audits Part"></a>Audits Part</h3><p>Chrome Audits的是用来分析页面加载的过程，进而提供减少页面加载时间、提升响应速度的方案。对网络和页面性能进行检测，根据测试的结果进行优化。但是检测结果只是参考，在实际的项目中肯定有特殊情况存在，并不能为了满足某项测试结果而忽略特定情况的存在。</p>
<p>Best Practices for Speeding Up Your Web Site By Yahoo</p>
<ol>
<li>尽可能减少HTTP请求数  </li>
<li>使用CDN  </li>
<li>添加Expire/Cache-Control头  </li>
<li>启用Gzip压缩</li>
<li>将CSS放在页面最上方  </li>
<li>将Script放在页面最下方  </li>
<li>避免在CSS中使用Expressions</li>
<li>把Javascript和CSS都放在外部文件中  </li>
<li>减少DNS查询  </li>
<li>压缩JavaScript和CSS</li>
<li>避免重定向  </li>
<li>移除重复的脚本  </li>
<li>配置实体标签(ETAG)  </li>
<li>使AJAX缓存</li>
</ol>
<p>相类似的检测工具有PageSpeed和YSlow<br><a href="http://yslow.org/" target="_blank" rel="external">http://yslow.org/</a><br><a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="external">https://developers.google.com/speed/pagespeed/insights/</a></p>
<p>火狐浏览器可以使用下面这个插件来测试页面性能<br><a href="https://addons.mozilla.org/en-US/firefox/addon/dust-me-selectors/" target="_blank" rel="external">https://addons.mozilla.org/en-US/firefox/addon/dust-me-selectors/</a></p>
<p>很多时候都是事与愿违的，往往特别想得到什么，往往结果却是一场空，<br>没有理由和原委，结果就是这样，没有其它的选择。当我一次次努力想要<br>达到自己的追求，一次次的被打回来。没有任何防备，无论是工作还是<br>生活上的，没有一点点是自己顺心的，反过来想想也不知道是为什么或者<br>什么导致了现在这种状态，我没有办法去反抗，因为除了接受还是接受。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://www.google.com/chrome/browser/desktop/" target="_blank" rel="external">Chrome Developer Tools</a>是一件非常棒的艺术品。</p>
<h3 id=]]>
    </summary>
    
      <category term="Chrome" scheme="http://www.darcywang.com/tags/Chrome/"/>
    
      <category term="FullStack" scheme="http://www.darcywang.com/categories/FullStack/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Front-end  技能梳理]]></title>
    <link href="http://www.darcywang.com/2016/01/05/Front-end-%E6%8A%80%E8%83%BD%E6%A2%B3%E7%90%86/"/>
    <id>http://www.darcywang.com/2016/01/05/Front-end-技能梳理/</id>
    <published>2016-01-05T08:21:18.000Z</published>
    <updated>2017-07-05T02:10:44.000Z</updated>
    <content type="html"><![CDATA[<p>当今这个技术变幻莫测的年代，任何技术都有可能被迅速的替代甚至丢弃。</p>
<p>这篇博客主要讲的前端体系中生态构建和HTML、CSS框架，如有不足，还请留言指正。</p>
<h4 id="u751F_u6001_u5DE5_u5177"><a href="#u751F_u6001_u5DE5_u5177" class="headerlink" title="生态工具"></a>生态工具</h4><p>现在一般常用的grunt/gulp开发环境，都是需要建立在node环境里面。工程师们在github上会经常看到某一个很火的前端项目都会包含Gruntfile.j、gulpfile.js、bower.json其中一个或者是两个的。而且会提示下载后进入到项目目录里面进行npm install的指令。</p>
<h5 id="Nodejs"><a href="#Nodejs" class="headerlink" title="Nodejs"></a>Nodejs</h5><p><a href="https://www.npmjs.com/" target="_blank" rel="external">nodejs</a>的出现彻底改变了前端的概念</p>
<h5 id="Gulp"><a href="#Gulp" class="headerlink" title="Gulp"></a>Gulp</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/gulp.png?imageView2/2/h/400" alt=""></p>
<h5 id="Grunt"><a href="#Grunt" class="headerlink" title="Grunt"></a>Grunt</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/grunt.png?imageView2/2/h/400" alt=""></p>
<h5 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/webpack.png?imageView2/2/h/400" alt=""></p>
<h5 id="Bower"><a href="#Bower" class="headerlink" title="Bower"></a>Bower</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/bower.png?imageView2/2/h/400" alt=""></p>
<h4 id="HTML_u3001CSS_u6846_u67B6"><a href="#HTML_u3001CSS_u6846_u67B6" class="headerlink" title="HTML、CSS框架"></a>HTML、CSS框架</h4><p>框架的出现主要避免了重复造轮子，再好的框架也会有它鸡肋的一面，所以在选择哪种框架适合自己实际项目时一定需要权衡清楚。自己也会使用一些流行的前端框架，但后面感觉做出来的产品根本没有自己的调性，所有的按钮排版都千篇一律，感觉更是PHP工程师们写出来的东西。</p>
<h5 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/bootstrap.png?imageView2/2/h/400" alt=""></p>
<h5 id="Foundation"><a href="#Foundation" class="headerlink" title="Foundation"></a>Foundation</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/foundain.png?imageView2/2/h/400" alt=""></p>
<h5 id="Skeleton"><a href="#Skeleton" class="headerlink" title="Skeleton"></a>Skeleton</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/skeleton.png?imageView2/2/h/400" alt=""></p>
<h4 id="u524D_u7AEF_u6846_u67B6"><a href="#u524D_u7AEF_u6846_u67B6" class="headerlink" title="前端框架"></a>前端框架</h4><h5 id="express-js"><a href="#express-js" class="headerlink" title="express.js"></a>express.js</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/express.png?imageView2/2/h/400" alt=""></p>
<h5 id="angular-js"><a href="#angular-js" class="headerlink" title="angular.js"></a>angular.js</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/angular.png?imageView2/2/h/400" alt=""></p>
<h5 id="vue-js"><a href="#vue-js" class="headerlink" title="vue.js"></a>vue.js</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/vue.png?imageView2/2/h/400" alt=""></p>
<h5 id="react-js"><a href="#react-js" class="headerlink" title="react.js"></a>react.js</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/react.png?imageView2/2/h/400" alt=""></p>
<h4 id="Native/Hybird_u5F00_u53D1"><a href="#Native/Hybird_u5F00_u53D1" class="headerlink" title="Native/Hybird开发"></a>Native/Hybird开发</h4><h5 id="ionic"><a href="#ionic" class="headerlink" title="ionic"></a>ionic</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/ionic.png?imageView2/2/h/400" alt=""></p>
<h5 id="phonegap"><a href="#phonegap" class="headerlink" title="phonegap"></a>phonegap</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/phonegap.png?imageView2/2/h/400" alt=""></p>
<h5 id="Meteor"><a href="#Meteor" class="headerlink" title="Meteor"></a>Meteor</h5><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/meteor.png?imageView2/2/h/400" alt=""></p>
<p>在过去当谈到前端时，很多人潜意识里面就会想到一个切页面的。但是最近几年确实发生非常大的变化，前端不仅仅是拿着Photoshop切图，用CSS和HTML做出静态页面。更需要使用javascript和jQuery来实现复杂的交互和动画效果，这就对一个新时代的前端所掌握的技能提出了新的要求。</p>
<p>前端通常指的是可以在浏览器里面看到的网站，一般也称为客户端。它是包含呈现内容的方式，一位前端工程师需要花大量的时间研究HTML CSS Javascript等浏览器能认识的语言。</p>
<p>参考资料<br><a href="https://teamtreehouse.com/tracks/front-end-web-development" target="_blank" rel="external">https://teamtreehouse.com/tracks/front-end-web-development</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>当今这个技术变幻莫测的年代，任何技术都有可能被迅速的替代甚至丢弃。</p>
<p>这篇博客主要讲的前端体系中生态构建和HTML、CSS框架，如有不足，还请留言指正。</p>
<h4 id="u751F_u6001_u5DE5_u5177"><a href="#u751F_u]]>
    </summary>
    
      <category term="fullstack" scheme="http://www.darcywang.com/tags/fullstack/"/>
    
      <category term="FullStack" scheme="http://www.darcywang.com/categories/FullStack/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Back-end  技能梳理]]></title>
    <link href="http://www.darcywang.com/2016/01/05/Back-end-%E6%8A%80%E8%83%BD%E6%A2%B3%E7%90%86/"/>
    <id>http://www.darcywang.com/2016/01/05/Back-end-技能梳理/</id>
    <published>2016-01-05T08:19:15.000Z</published>
    <updated>2017-07-05T02:00:41.000Z</updated>
    <content type="html"><![CDATA[<p>持续更新中······· </p>
<p>敬请期待<br>在过去当谈到开发时，通常是是指后台开发。后台一般与数据打交道比较多，所以也会称为服务器端。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>持续更新中······· </p>
<p>敬请期待<br>在过去当谈到开发时，通常是是指后台开发。后台一般与数据打交道比较多，所以也会称为服务器端。</p>
]]>
    </summary>
    
      <category term="fullstack" scheme="http://www.darcywang.com/tags/fullstack/"/>
    
      <category term="FullStack" scheme="http://www.darcywang.com/categories/FullStack/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AWS Basic]]></title>
    <link href="http://www.darcywang.com/2015/12/26/AWS-Basic/"/>
    <id>http://www.darcywang.com/2015/12/26/AWS-Basic/</id>
    <published>2015-12-26T13:57:12.000Z</published>
    <updated>2016-02-23T09:52:34.000Z</updated>
    <content type="html"><![CDATA[<h3 id="AWS_u662F_u4EC0_u4E48"><a href="#AWS_u662F_u4EC0_u4E48" class="headerlink" title="AWS是什么"></a>AWS是什么</h3><p><a href="http://aws.amazon.com/cn/" target="_blank" rel="external">AWS</a>是一种服务，阿里云和新浪云跟它类型差不多，但其实差很多。事实是AWS从06年就开始做这方面的服务了，而国内的几乎都是近几年才开始，这并不是说不支持国货，现实是人家确实做得非常好，而且已经开始打入中国这个巨大的市场。</p>
<p>AWS的服务非常多，现在一般创业需要用的服务是EC2和S3。Amazon EC2是一个IaaS云服务，主要提供弹性的计算资源。通俗的讲，就是提供多种类型的虚拟机。EC2也是整个AWS最核心的组成部分，AWS中有许多的服务需要依赖它。在EC2环境中，虚拟机被称为实例，实例的镜像被称为AMI。任何的企业和个人都可以选择不同的类型和大小的实例，在很短的时间内创建、启动和运行。主要是根据类型和使用时间收费，即使用多少收多少的费用。</p>
<p><a href="http://s3.amazonaws.com/awsdocs/gettingstarted/latest/awsgsg-intro-zh_cn.pdf" target="_blank" rel="external">Amazon S3</a>是可以提供安全、耐久且扩展性高的对象存储。它也是根据实际使用的存储量付费。没有最低费用和准备成本。提供一系列的存储类别，可用于不同的用例，包括用于频繁访问数据的通用存储的、用于长期但非频繁访问数据的，以及用于长期档案的。Amazon S3 还提供可配置生命周期政策，以便在你数据的生命周期内对其进行管理。一旦设置了政策，你的数据便会自动迁移到最合适的存储类别，而你的应用程序无需任何更改。<br>Amazon S3 可单独使用，或与Amazon EC2和IAM等AWS服务以及第三方存储库和网关结合使用。</p>
<p>AWS提供的主要服务：<br>    EBS（Elastic Block Storage）：为EC2实例提供永久性的存储<br>    弹性IP地址：主要是用于动态云计算的静态IP地址，与你的实例关联而不是某个具体的实例<br>    VPC（Virtual Private Cloud）：允许你在 Amazon Web Services (AWS) 云中预配置出一个私有、隔离的部分，让你在自己定义的虚拟网络中启动 AWS 资源。借助 Amazon VPC，你可以定义一个与自己数据中心内运行的传统网络非常相似的虚拟网络拓扑。<br>    ELB（Elastic Load Balancing）：可以跨越多个 Amazon EC2 实例自动分配应用程序的传入流量。<br>    Auto Scaling：根据你定义的条件自动扩展 Amazon EC2 容量</p>
<h3 id="AWS_u6709_u4EC0_u4E48_u7528"><a href="#AWS_u6709_u4EC0_u4E48_u7528" class="headerlink" title="AWS有什么用"></a>AWS有什么用</h3><p>AWS的用处特别大，做技术都知道开个互联网公司一定会买主机租服务器之类等非常多麻烦的事情，业务做的不错的话，可能还需要添加的更多物理设备。但是当使用的了AWS，这一切都不需要了，而且最开始的投入是非常小的。</p>
<h3 id="AWS_u600E_u4E48_u7528"><a href="#AWS_u600E_u4E48_u7528" class="headerlink" title="AWS怎么用"></a>AWS怎么用</h3><p>目前中国区域的AWS服务还在有限预览阶段，建立中国（北京）地区帐户的一个先决条件是有中国（大陆）的法人实体。而AWS海外账户支持个人用户注册，并可以体验AWS海外免费套餐。意思就是说你可以先试玩一段时间，等我们杀进来以后，大家就都happy了。</p>
<p>关于AWS 免费套餐（仅限海外账号）服务/产品包括自 AWS 注册之日起 12 个月内可供免费使用的服务，以及在 AWS 免费套餐的 12 个月期限到期后不自动过期的其他服务/产品。 未超过免费套餐额度的使用，将不会产生费用。 选择您的AWS免费套餐，请点击：<a href="https://aws.amazon.com/cn/free/" target="_blank" rel="external">AWS免费套餐详情</a> </p>
<p>首先我们可以<a href="https://china.qwiklab.com/" target="_blank" rel="external">先去这里</a>练一下手，通过免费的实验室视频快速入门学习AWS 服务的关键基础知识，并在手动实验室中将从视频中学到的 AWS 服务相关知识转变成实际操作经验。在快速上手实验室 获得真实体验。 </p>
<p>重要的事情说三遍，<a href="https://aws.amazon.com/cn/documentation/?nc1=f_dr" target="_blank" rel="external">读文档</a>、<a href="https://aws.amazon.com/cn/documentation/?nc1=f_dr" target="_blank" rel="external">读文档</a>、<a href="https://aws.amazon.com/cn/documentation/?nc1=f_dr" target="_blank" rel="external">读文档</a>！！！</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="AWS_u662F_u4EC0_u4E48"><a href="#AWS_u662F_u4EC0_u4E48" class="headerlink" title="AWS是什么"></a>AWS是什么</h3><p><a href="http://aws.amaz]]>
    </summary>
    
      <category term="AWS" scheme="http://www.darcywang.com/tags/AWS/"/>
    
      <category term="Techniques" scheme="http://www.darcywang.com/categories/Techniques/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[jQuery Plugin]]></title>
    <link href="http://www.darcywang.com/2015/12/26/jQuery-Plugin/"/>
    <id>http://www.darcywang.com/2015/12/26/jQuery-Plugin/</id>
    <published>2015-12-26T13:56:27.000Z</published>
    <updated>2017-07-05T02:15:20.000Z</updated>
    <content type="html"><![CDATA[<p>jQuery插件对于80后的前端开发来说，实在是再熟悉不过了。在工作中的同事大部分还是80后，每次看到他们收集这些插件的时候就像是捡到宝一样，幸福满满。对于自己来说，用过的插件好像就是lazyload和validation，但是后来发现国外牛逼的人才早就写出更好更轻巧的js，完全可以忽略这些过时的插件。</p>
<p>首先先说一下jquery.validate.js，这个曾经叱诧风云的第三方插件。现在可以取代的是<a href="http://parsleyjs.org/" target="_blank" rel="external">Parsley.js</a>，首先说的是大小问题，<a href="https://github.com/guillaumepotier/Parsley.js/blob/master/dist/parsley.min.js" target="_blank" rel="external">parsley.min.js</a>只有36kb大小，然后两个插件都对jQuery有依赖。最主要推荐的理由是github上parsley的点赞要比validate多。</p>
<p>其次说一下关于jquery.lazyload.js，推荐的是<a href="http://callmecavs.github.io/layzr.js/" target="_blank" rel="external">layzr.js</a>，它只有<a href="https://github.com/callmecavs/layzr.js/blob/master/dist/layzr.min.js" target="_blank" rel="external">3kb</a>大小，最主要的是不依赖jQuery。用法也是非常的简单，可以<a href="https://github.com/callmecavs/layzr.js" target="_blank" rel="external">参照</a></p>
<p>然后推荐一下自己在做移动端经常会用到的弹窗组件<a href="http://t4t5.github.io/sweetalert/" target="_blank" rel="external">Sweetalert</a>，首先它也只有10多kb，然后它的交互api非常丰富，可以满足自己开发的需求，最后也是最重要的是弹窗非常的精致优美，同时伴有动画效果，给人非常友好的feelings。可以<a href="http://t4t5.github.io/sweetalert/" target="_blank" rel="external">先去这里</a>玩一玩效果，然后在这里查看<a href="https://www.ludu.co/lesson/how-to-use-sweetalert" target="_blank" rel="external">使用方法</a>。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>jQuery插件对于80后的前端开发来说，实在是再熟悉不过了。在工作中的同事大部分还是80后，每次看到他们收集这些插件的时候就像是捡到宝一样，幸福满满。对于自己来说，用过的插件好像就是lazyload和validation，但是后来发现国外牛逼的人才早就写出更好更轻巧的js]]>
    </summary>
    
      <category term="Javascript" scheme="http://www.darcywang.com/tags/Javascript/"/>
    
      <category term="Techniques" scheme="http://www.darcywang.com/categories/Techniques/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[移动端开发]]></title>
    <link href="http://www.darcywang.com/2015/12/22/mobile-side-develop/"/>
    <id>http://www.darcywang.com/2015/12/22/mobile-side-develop/</id>
    <published>2015-12-22T03:14:17.000Z</published>
    <updated>2017-07-05T01:59:45.000Z</updated>
    <content type="html"><![CDATA[<p>首先需要明确的是移动端开发是建立在PC端的基础上的。为什么这么说，最开始是笔记本的普及，随着技术的更新和迭代，配置一般的上网本价格都是大众消费能力以内，所以每个人都可以轻松的通过笔记本电脑阅读，购物。但就是最近几年，得益于国内某些”知名”手机制造商，让一部4英寸的智能机在1000元以内就能到手，所以可以想象的是国内智能手机普及是多么的吓人，更不用说潜在的群体学生和老人也加入到其中。</p>
<p>从笔记本电脑到移动智能设备的过渡是如此之快，以至于商家有些猝不及防，自己的产品不仅能在PC端能很好地展示，相应的在手机上也是正常展示，这就催生了移动端开发。</p>
<p>自己一开始就是做的移动端，所以对PC端开发不是那么的熟悉，不能很好的说出两者的区别和相似点，如果你有好的建议和意见可以在下面留言给我。</p>
<p>现在一个成功的互联网产品离不开3个部分的开发，PC、Android、iOS。移动APP的开发有两种不同的路线，NativeAPP和Web APP。这两种路线的区别类似于PC时代开发应用程序时的C/S架构和 B/S架构。更流行一些的是hybrid app开发，这是一个什么概念呢？后台提供API接口可以给三方使用，在原生的APP内嵌套H5页面，安卓和iOS都可以使用。</p>
<p>Native APP，即所有的程序都由本地组件渲染完成。这类APP优点是显而易见的，渲染速度快、用户体验好；缺点同时也十分突出：出现了错误一定要等待下一次用户进行APP更新才能够修复，而且开发成本高。Web APP的优点恰好就是Native APP的缺点所在，其页面全部采用H5撰写并存放在服务器端。每次进行页面渲染时都从服务器请求最新的页面。一旦页面有错误，服务器端进行更新便能立刻解决。不过其弊端也容易窥见：每次页面都需要请求服务器，造成渲染时等待时间过长，从而导致的用户体验不够完美，并且性能上较Native APP慢了1-2个数量级；与此同时还会导致更多的用户流量消耗。另一个缺点则在于，Web APP在移动端上调用本地的硬件设备存在一定的不便。不过这些弊端也都有相应的解决方案，如PhoneGap将网页提前打包在本地以减少网络的请求时间；同时也提供一系列的插件来访问本地的硬件设备。然而，尽管如此，其渲染速度上还是存在一定的差距。</p>
<p>Hybrid APP则是综合了二者优缺点的解决方案。饿了么移动对于此二类APP的观点在于，纯粹展示性的模块会更适合使用Web页面来达到渲染的目的；而更多的数据操作性、动画渲染性的模块则更适合采用Native的方式。</p>
<p>经过这些年的业务发展，Hybrid提供的展示界面更新方案也逐渐地无法满足APP更新迭代的需要。因此越来越多的动态部署的方案被提了出来，比如iOS下的JSPatch, waxPatch，Android下的Dexpose,AndFix, ClassLoader，都是比较成熟Hot Patch动态部署解决方案。这些方案的思路都是通过下载远程服务器的代码来动态更新本地的代码行为。<br>React-Native则属于另一种动态部署的方案，其核心原理在于通过JavaScript来调用本地组件进行界面的渲染。<br>而饿了么移动APP发展到今天，各个APP综合用户量已经过亿。因此一个非常小的Bug所带来的问题都可能会直接影响到几万人的使用。为了保证APP的稳定性和健壮性，Hot Patch方案也就成了当下最有待解决的问题。<br>根据80%的用户访问20%页面这一80/20原则，保证这20%访问最频繁的页面的稳定性就是保证了80%的APP的稳定性。因此，饿了么移动对于部分访问最频繁的模块进行了React-Native备份。当这部分页面出现问题时，APP可以通过服务器的配置，自动切换成React-Native的备份页面；而与此同时开发人员开发一个小而精的Hot Patch来修复出现的问题。当Hot Patch完成修补后，再切换回Native APP的原生功能。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先需要明确的是移动端开发是建立在PC端的基础上的。为什么这么说，最开始是笔记本的普及，随着技术的更新和迭代，配置一般的上网本价格都是大众消费能力以内，所以每个人都可以轻松的通过笔记本电脑阅读，购物。但就是最近几年，得益于国内某些”知名”手机制造商，让一部4英寸的智能机在1]]>
    </summary>
    
      <category term="移动端" scheme="http://www.darcywang.com/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
      <category term="Techniques" scheme="http://www.darcywang.com/categories/Techniques/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在路上]]></title>
    <link href="http://www.darcywang.com/2015/12/22/The-Road/"/>
    <id>http://www.darcywang.com/2015/12/22/The-Road/</id>
    <published>2015-12-22T03:11:24.000Z</published>
    <updated>2017-06-08T00:50:36.000Z</updated>
    <content type="html"><![CDATA[<p>现在的计划大的框架用Django，然后前台展示的页面嵌入自己前端框架，使用node.js为环境加上gulp实现工作流，后端API使用Django的restframework。</p>
<p>在走向全栈的道路上要不断的学习新的知识和勇于去探索。</p>
<p>现在看着当年写下的文字，感觉很豪情壮阔啊. 相对比现在已经赶不上那个年代了，当自己主要的事情已经完成了，其他的都是小事情了。自己念书的时候从来没有想过坐在海淀区的写字楼里面，用着不错的机器，对面坐着一位空姐，这是一件非常奇妙的事情。</p>
<p>身边太多羁绊也不太好，就像自己觉得不舒服了。就赶紧松松绑，每天的生活都是由自己来掌控，</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>现在的计划大的框架用Django，然后前台展示的页面嵌入自己前端框架，使用node.js为环境加上gulp实现工作流，后端API使用Django的restframework。</p>
<p>在走向全栈的道路上要不断的学习新的知识和勇于去探索。</p>
<p>现在看着当年写下]]>
    </summary>
    
      <category term="fullstack" scheme="http://www.darcywang.com/tags/fullstack/"/>
    
      <category term="life" scheme="http://www.darcywang.com/tags/life/"/>
    
      <category term="FullStack" scheme="http://www.darcywang.com/categories/FullStack/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Django Components]]></title>
    <link href="http://www.darcywang.com/2015/12/21/Django-Components/"/>
    <id>http://www.darcywang.com/2015/12/21/Django-Components/</id>
    <published>2015-12-21T01:46:05.000Z</published>
    <updated>2017-07-05T02:08:55.000Z</updated>
    <content type="html"><![CDATA[<p>Django的第三方组件也是非常丰富的，比如说Django rest framework，Gunicore等等之类，接下来会介绍几个自己常用的组件，希望能对你有所帮助。<br>你可以在这里查看所有的<a href="https://www.djangopackages.com/" target="_blank" rel="external">Django Package</a>，使用方法是在输入框中输入关键字，下面就会展现搜索结果，看Search Weight为100%，点击进去，然后在右边中间的Documentation。</p>
<h3 id="django-rest-framework"><a href="#django-rest-framework" class="headerlink" title="django-rest-framework"></a>django-rest-framework</h3><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/reset.png?imageView2/2/h/400" alt=""><br>首当其冲介绍Django Rest Framework(DRF)是有原因的，现在前后端一般通过api进行交互，这是一个什么概念呢，如果能够DRF掌握好，那后台其实就差不多了。还是老样子，我们先去<a href="http://www.django-rest-framework.org/" target="_blank" rel="external">官方文档</a>上看看，把上面的quickstart和6个部分都过一遍。在这里就不重复造轮子了，不过可以<a href="https://gitcafe.com/darcywang/Django-rest-framework" target="_blank" rel="external">在这里</a>找到我之前做的代码，参考一下。<br>DRF有几个非常好的特性，对于resource，serializer，renderer/parser, view 和 response的定义很清晰，又很符合Django的MTV模式（比如，它的view就是包装了Django的View实现的）。对于认证和授权有很好的支持，内置了一系列的Mixin，可以随意组装。最终用它来构建简单的一站式API构架，并且做出复杂的ReST结构。其Serializer，可以把model映射到其对应的一般化表示（JSON, XML之类的），其基于类的视图的扩展集也正符合API接口（endpoint）的需要。Serializer和基于类的视图扩展的清晰的分离是其精妙之处。同时，你也可以自定义URL而无需依赖自动生成，这也是DRF和其他构架（比如Tastypie或者是Piston）不同的地方。这些框架model到API接口的转换基本上都是自动的，这也就造成了灵活性的降低，限制了其在不同情况的使用（尤其是在认证和嵌套资源(nested resources)方面。构建REST API的优秀框架，可管理内容协商、序列化、分页等，开发者可以在浏览器中浏览构建的API</p>
<h3 id="django-debug-toolbar"><a href="#django-debug-toolbar" class="headerlink" title="django-debug-toolbar"></a>django-debug-toolbar</h3><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/toolbar.png?imageView2/2/h/400" alt=""><br>Django本身自带了非常友好的报错信息提示，但是如能加上<a href="https://django-debug-toolbar.readthedocs.org/en/1.4/installation.html" target="_blank" rel="external">django-debug-toolbar</a>，就好像剑圣配上一把短刀，武功更加无敌。看过《剑雨》的朋友都知道，里面最牛逼的武器是剑配上短刀。<a href="http://stackoverflow.com/questions/6390310/how-do-i-see-the-django-debug-toolbar" target="_blank" rel="external">安装配置</a>都非常简单，还需要提到一点，这个工具在SQL查询时特别有用，DDT可以查询到每个特定的页面渲染所需要的时间，</p>
<h3 id="django-allauth"><a href="#django-allauth" class="headerlink" title="django-allauth"></a>django-allauth</h3><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/allauth.png?imageView2/2/h/400" alt=""><br>可用于账号注册、管理和第三方社交账号的认证。配置也是非常的简单，记得<a href="http://django-allauth.readthedocs.org/en/latest/configuration.html" target="_blank" rel="external">参考文档</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'profiles'</span>,</span><br><span class="line">    <span class="string">'crispy_forms'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sites'</span>,</span><br><span class="line">    <span class="string">'allauth'</span>,</span><br><span class="line">    <span class="string">'allauth.account'</span>,</span><br><span class="line">    <span class="string">'allauth.socialaccount'</span>,</span><br><span class="line">    <span class="string">'stripe'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'rest_framework'</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">MIDDLEWARE_CLASSES = (</span><br><span class="line">    <span class="string">'django.contrib.sessions.middleware.SessionMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.middleware.common.CommonMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.middleware.csrf.CsrfViewMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth.middleware.AuthenticationMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth.middleware.SessionAuthenticationMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages.middleware.MessageMiddleware'</span>,</span><br><span class="line">    <span class="string">'django.middleware.clickjacking.XFrameOptionsMiddleware'</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">ROOT_URLCONF = <span class="string">'vita.urls'</span></span><br><span class="line"></span><br><span class="line">WSGI_APPLICATION = <span class="string">'vita.wsgi.application'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Database</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/1.7/ref/settings/#databases</span></span><br><span class="line"></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.sqlite3'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: os.path.join(BASE_DIR, <span class="string">'db.sqlite3'</span>),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Internationalization</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/1.7/topics/i18n/</span></span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">'en-us'</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">'UTC'</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">USE_L10N = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">USE_TZ = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/1.7/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line"></span><br><span class="line">TEMPLATE_DIRS = (os.path.join(os.path.dirname(BASE_DIR), <span class="string">'static'</span>, <span class="string">'templates'</span>), )</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> DEBUG:</span><br><span class="line">    MEDIA_URL = <span class="string">'/media/'</span></span><br><span class="line">    STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), <span class="string">"static"</span>, <span class="string">"static-only"</span>)</span><br><span class="line">    MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), <span class="string">"static"</span>, <span class="string">"media"</span>)</span><br><span class="line">    STATICFILES_DIRS = (os.path.join(os.path.dirname(BASE_DIR), <span class="string">"static"</span>, <span class="string">"static"</span>), </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">CRISPY_TEMPLATE_PACK = <span class="string">'uni_form'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TEMPLATE_CONTEXT_PROCESSORS = (<span class="string">"django.contrib.auth.context_processors.auth"</span>,</span><br><span class="line"><span class="string">"django.core.context_processors.debug"</span>,</span><br><span class="line"><span class="string">"django.core.context_processors.i18n"</span>,</span><br><span class="line"><span class="string">"django.core.context_processors.media"</span>,</span><br><span class="line"><span class="string">"django.core.context_processors.static"</span>,</span><br><span class="line"><span class="string">"django.core.context_processors.tz"</span>,</span><br><span class="line"><span class="string">"django.contrib.messages.context_processors.messages"</span>,</span><br><span class="line"><span class="string">'django.core.context_processors.request'</span>,</span><br><span class="line"><span class="string">'django.core.context_processors.csrf'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">    <span class="string">'django.contrib.auth.backends.ModelBackend'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'allauth.account.auth_backends.AuthenticationBackend'</span>,</span><br><span class="line">   </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">SITE_ID = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">LOGIN_URL = <span class="string">'/accounts/login/'</span></span><br><span class="line">LOGIN_REDIRECT_URL = <span class="string">'/'</span></span><br><span class="line"></span><br><span class="line">ACCOUNT_AUTHENTICATION_METHOD = <span class="string">"username_email"</span></span><br><span class="line">ACCOUNT_CONFIRM_EMAIL_ON_GET = <span class="keyword">False</span></span><br><span class="line">ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = LOGIN_URL</span><br><span class="line">ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = <span class="number">3</span> </span><br><span class="line">ACCOUNT_EMAIL_REQUIRED = <span class="keyword">False</span> </span><br><span class="line">ACCOUNT_EMAIL_VERIFICATION = <span class="keyword">None</span></span><br><span class="line">ACCOUNT_EMAIL_SUBJECT_PREFIX = <span class="string">"My subject: "</span></span><br><span class="line">ACCOUNT_DEFAULT_HTTP_PROTOCOL = <span class="string">"http"</span></span><br><span class="line"></span><br><span class="line">ACCOUNT_LOGOUT_ON_GET = <span class="keyword">False</span></span><br><span class="line">ACCOUNT_LOGOUT_REDIRECT_URL = <span class="string">"/"</span></span><br><span class="line">ACCOUNT_SIGNUP_FORM_CLASS = <span class="keyword">None</span></span><br><span class="line">ACCOUNT_SIGNUP_PASSWORD_VERIFICATION = <span class="keyword">True</span></span><br><span class="line">ACCOUNT_UNIQUE_EMAIL = <span class="keyword">True</span></span><br><span class="line">ACCOUNT_USER_MODEL_USERNAME_FIELD = <span class="string">"username"</span></span><br><span class="line">ACCOUNT_USER_MODEL_EMAIL_FIELD = <span class="string">"email"</span></span><br><span class="line"></span><br><span class="line">ACCOUNT_USERNAME_MIN_LENGTH = <span class="number">5</span></span><br><span class="line">ACCOUNT_USERNAME_BLACKLIST = []</span><br><span class="line">ACCOUNT_USERNAME_REQUIRED = <span class="keyword">True</span></span><br><span class="line">ACCOUNT_PASSWORD_INPUT_RENDER_VALUE = <span class="keyword">False</span></span><br><span class="line">ACCOUNT_PASSWORD_MIN_LENGTH = <span class="number">6</span></span><br><span class="line">ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">STRIPE_SECRET_KEY = <span class="string">'sk_test_K7H1k71vlT0rrLLCWdWI30k1'</span></span><br><span class="line"></span><br><span class="line">STRIPE_PUBLISHABLE_KEY = <span class="string">'pk_test_sBfSUMWlkN2fywRZgxCXnlkN'</span></span><br><span class="line"></span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="string">'DEFAULT_PERMISSION_CLASSES'</span>: (<span class="string">'rest_framework.permissions.IsAdminUser'</span>,),</span><br><span class="line">    <span class="string">'PAGE_SIZE'</span>: <span class="number">10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="django-crispy-forms"><a href="#django-crispy-forms" class="headerlink" title="django-crispy-forms"></a>django-crispy-forms</h3><p><img src="http://7xr8la.com1.z0.glb.clouddn.com/form.png?imageView2/2/h/400" alt=""><br>对django form在html页面呈现方式进行管理的一个第三方插件，说句实话，form module在Django里面是非常重要的。配置和使用都可以自己在网上搜索到。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Django的第三方组件也是非常丰富的，比如说Django rest framework，Gunicore等等之类，接下来会介绍几个自己常用的组件，希望能对你有所帮助。<br>你可以在这里查看所有的<a href="https://www.djangopackages.co]]>
    </summary>
    
      <category term="Django" scheme="http://www.darcywang.com/tags/Django/"/>
    
      <category term="Techniques" scheme="http://www.darcywang.com/categories/Techniques/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JS learned]]></title>
    <link href="http://www.darcywang.com/2015/12/19/JS-learned/"/>
    <id>http://www.darcywang.com/2015/12/19/JS-learned/</id>
    <published>2015-12-19T06:55:27.000Z</published>
    <updated>2017-07-05T02:16:44.000Z</updated>
    <content type="html"><![CDATA[<p>Javascript是一门非常容易上手的语言，但是想要使用的恰到好处，还是需要费点时间。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Javascript是一门非常容易上手的语言，但是想要使用的恰到好处，还是需要费点时间。</p>
]]>
    </summary>
    
      <category term="Javascript" scheme="http://www.darcywang.com/tags/Javascript/"/>
    
      <category term="Techniques" scheme="http://www.darcywang.com/categories/Techniques/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Django for Webapp]]></title>
    <link href="http://www.darcywang.com/2015/12/18/Django-for-Webapp/"/>
    <id>http://www.darcywang.com/2015/12/18/Django-for-Webapp/</id>
    <published>2015-12-18T01:42:33.000Z</published>
    <updated>2017-07-05T02:09:08.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xr8la.com1.z0.glb.clouddn.com/djangoIcon.png?imageView2/2/h/400" alt=""></p>
<p>刚刚开始接触Django时让我想到了一部电影<a href="http://movie.douban.com/subject/6307447/?source=new_aladdin" target="_blank" rel="external">《被解救的姜戈》</a>，一看名字Django Unchained，还真的是一样的啊。</p>
<p>Django有很多版本，我自己学习并使用在项目里面的是1.7.11，所以我接下来的要讲的东西是基于<strong> Django 1.7 </strong>上的。重要的事情说3遍，看文档，看文档，看文档首先需要明白的是Django是个什么东西，对吧？说白了，它就是一个<a href="https://en.wikipedia.org/wiki/Django_(web_framework)" target="_blank" rel="external">web框架</a>, 它只是一个被人做好的一个工具，跟那些bootstrap什么之类的差不多咯。</p>
<p>OK，Let’s get our hands dirty。</p>
<p>在最开始先说明自己是用的Linux系统，已经安装好了Python 2.7，<a href="https://docs.djangoproject.com/en/1.7/" target="_blank" rel="external">Django 1.7</a></p>
<p>先介绍一个神奇的东西–<a href="https://virtualenv.readthedocs.org/en/latest/" target="_blank" rel="external">virtualenv</a>，它的作用是可以给你一个独立的开发环境。简单说一下，比如你用Django 1.7版本，然后你又想用Django 1.8版本试一下手，这个时候就是virtualenv的用武之地，它可以让你在电脑上建N多个开发环境，它们都互不干扰。安装也是非常简单<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ [sudo] pip install virtualenv</span><br></pre></td></tr></table></figure></p>
<p>使用起来也是灰常简单，最先开始你得先给你的环境起一个非常有逼格的名字，记住是环境的名字。环境造好以后就是启动环境，接着就是造项目了，项目的名字可以和环境的名字一样，因为这样就可以让你搞不明白是什么意思，装逼一下啊。事实是无论你项目名字是什么，接下来都会把它修改为src。因为src文件名称在你脑海里面就有那么一种意思，对，就是那个作用。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ virtualenv YourProjectName</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> YourProjectName</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">source</span> bin/activate</span><br><span class="line"></span><br><span class="line">$ django-admin.py startproject YourProjectName</span><br></pre></td></tr></table></figure></p>
<p>完成上面几个步骤以后有几点你需要注意的，启动环境以后你会看到$符号前面包含你环境名字的双括号，另外关闭环境就是deactivate，是不是非常easy。最后你看到的目录是 bin/ include/ lib/ src/<br>还有几点优化可以做，比如说可以添加一个start.sh文件，然后你就每次直接 . ./start。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span><br><span class="line"></span></span><br><span class="line"><span class="built_in">source</span> bin/activate</span><br><span class="line"><span class="built_in">cd</span> src</span><br></pre></td></tr></table></figure></p>
<p>在以后的开发中会经常用到以下的命令行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ pip freeze 查看当前环境里面都安装了些什么东东</span><br><span class="line"></span><br><span class="line">$ python manage.py startapp NewAppName 安装新的App</span><br><span class="line"></span><br><span class="line">$ python manage.py runserver <span class="number">12344</span></span><br></pre></td></tr></table></figure></p>
<p>现在可以放下手中的代码，一起来想想这个问题。当一个开发环境搭好，可以开始做项目了，需要注意什么，从什么地方开始呢？<br>当你用Django新创建好一个新项目的时候，它就自己带好了一个admin的模块。里面有4个python文件，<strong>init</strong>.py  settings.py  urls.py  wsgi.py，一个一个来分析一下。</p>
<h4 id="init-py"><a href="#init-py" class="headerlink" title="<strong>init</strong>.py"></a><strong>init</strong>.py</h4><p>任何时候只要新建了一个app，就一定会带有这个文件。它的作用是相当于class中的def <strong>init</strong>(self):函数，用来初始化模块。并且把所在目录当作一个package处理，还有from-import 语句导入子包时需要用到它。 如果没有用到, 他们可以是空文件。就比如package.module下的所有模块from package.module import * </p>
<h4 id="settings-py"><a href="#settings-py" class="headerlink" title="settings.py"></a>settings.py</h4><p>它是整个Django的核心文件，任何重要的配置都需要在这里面进行修改。但是记得不搞乱搞它哦</p>
<h4 id="urls-py"><a href="#urls-py" class="headerlink" title="urls.py"></a>urls.py</h4><p>在Django中，每一个request都通过urls.py指向一个view。这种松散的耦合有着非常大的灵活性，但是需要注意的是设置路径</p>
<h4 id="wsgi-py"><a href="#wsgi-py" class="headerlink" title="wsgi.py"></a>wsgi.py</h4><p>wsgi(Python Web Server Gateway Interface)服务器网关接口，是Python语言定义的web服务器和web服务程序或者框架之间的一种简单而通用的接口。说得简单一点，就是服务器配置的文件，你可以在这个<a href="http://epicserve-docs.readthedocs.org/en/latest/django/ubuntu-server-django-guide.html" target="_blank" rel="external">demo</a>里面用到它</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xr8la.com1.z0.glb.clouddn.com/djangoIcon.png?imageView2/2/h/400" alt=""></p>
<p>刚刚开始接触Django时让我想到了一部电影<a href="http://m]]>
    </summary>
    
      <category term="Django" scheme="http://www.darcywang.com/tags/Django/"/>
    
      <category term="Python" scheme="http://www.darcywang.com/tags/Python/"/>
    
      <category term="Techniques" scheme="http://www.darcywang.com/categories/Techniques/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python and Django]]></title>
    <link href="http://www.darcywang.com/2015/12/18/Python-and-Django/"/>
    <id>http://www.darcywang.com/2015/12/18/Python-and-Django/</id>
    <published>2015-12-18T01:41:02.000Z</published>
    <updated>2017-07-05T02:17:41.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="Data" scheme="http://www.darcywang.com/tags/Data/"/>
    
      <category term="FullStack" scheme="http://www.darcywang.com/categories/FullStack/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS 3]]></title>
    <link href="http://www.darcywang.com/2015/12/17/CSS-3/"/>
    <id>http://www.darcywang.com/2015/12/17/CSS-3/</id>
    <published>2015-12-16T23:04:37.000Z</published>
    <updated>2016-03-01T12:38:44.000Z</updated>
    <content type="html"><![CDATA[<p>CSS3有非常多的新属性，特别是在移动端的使用，不仅能够加速CPU渲染效果，而且还能够省去一大堆的javascript。</p>
<p>下面我会介绍一些CSS3的专业技巧，如果你需要考虑IE浏览器，那就请掠过此篇文章，因为这些特性只能兼容到IE11。</p>
<h3 id="3Anot_28_29_u4F7F_u7528"><a href="#3Anot_28_29_u4F7F_u7528" class="headerlink" title=":not()使用"></a>:not()使用</h3><p>经常在布局导航栏或者多个div时，考虑到最后一个元素的border、margin什么之类<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* add border */</span></span><br><span class="line"><span class="class">.nav</span> <span class="tag">li</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">border-right</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#666</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* remove border */</span></span><br><span class="line"><span class="class">.nav</span> <span class="tag">li</span><span class="pseudo">:last-child</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">border-right</span>:<span class="value"> none</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>但当你使用:not()伪类时，就可以应用到想作用的元素<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.nav</span> <span class="tag">li</span><span class="pseudo">:not(</span><span class="pseudo">:last-child)</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">border-right</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#666</span></span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>当然你也可以使用.nav li + li，甚至是.nav li:first-child ~ li，但是:not()伪类字面意思清晰明了，当然符合现流行的语义化咯</p>
<h3 id="Line-Height"><a href="#Line-Height" class="headerlink" title="Line-Height"></a>Line-Height</h3><p>你不必对每一个h标签，p标签分别添加line-height属性，相反的，你只需要在body上添加就可以了，因为文本元素会简简单单的继承这一属性。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">1</span></span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="u795E_u9A6C_u90FD_u5782_u76F4_u5C45_u4E2D"><a href="#u795E_u9A6C_u90FD_u5782_u76F4_u5C45_u4E2D" class="headerlink" title="神马都垂直居中"></a>神马都垂直居中</h3><p>对，这不是变魔术，你真的可以垂直居中任何元素<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">html</span>, <span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">100%</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-align-items</span>:<span class="value"> center</span></span>;  </span><br><span class="line">  <span class="rule"><span class="attribute">-ms-flex-align</span>:<span class="value"> center</span></span>;  </span><br><span class="line">  <span class="rule"><span class="attribute">align-items</span>:<span class="value"> center</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> -webkit-flex</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> flex</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>还想让什么东西放在正中心么？垂直的、水平的，任何元素，任何时间，任何地点，请参考<a href="https://css-tricks.com/centering-css-complete-guide/" target="_blank" rel="external">牛人</a><br>注意在IE11下，flexbox可能有些<a href="https://github.com/philipwalton/flexbugs#3-min-height-on-a-flex-container-wont-apply-to-its-flex-items" target="_blank" rel="external">问题</a></p>
<h3 id="nth-child_u53CD_u9009"><a href="#nth-child_u53CD_u9009" class="headerlink" title="nth-child反选"></a>nth-child反选</h3><p>通过使用-nth-child选择从1到n<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">li</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> none</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选择前三个元素，让它们显示 */</span></span><br><span class="line"><span class="tag">li</span><span class="pseudo">:nth-child(-n+3)</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>或者你还可以这么做<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 同上 */</span></span><br><span class="line"><span class="tag">li</span><span class="pseudo">:not(</span><span class="pseudo">:nth-child(-n+3))</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> none</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="SVG_u6309_u94AE"><a href="#SVG_u6309_u94AE" class="headerlink" title="SVG按钮"></a>SVG按钮</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.logo</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(<span class="string">"logo.svg"</span>)</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="comment">/* 当SVG没有加载出来时，用下面代码就行了 */</span></span><br><span class="line"><span class="class">.no-svg</span> <span class="class">.icon-only</span><span class="pseudo">:after</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="function">attr</span>(aria-label)</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="Lobotomized_Owl_u9009_u62E9_u5668"><a href="#Lobotomized_Owl_u9009_u62E9_u5668" class="headerlink" title="Lobotomized Owl选择器"></a>Lobotomized Owl选择器</h3><p>名字听起来怪怪的，但确实有很牛逼的兼容性。下面这段代码的效果是(b)，如果非常有兴趣，可以继续阅读<a href="http://alistapart.com/article/axiomatic-css-and-lobotomized-owls" target="_blank" rel="external">这哥们</a>写的<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* + * <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">1.5em</span></span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="http://7xpb8g.com1.z0.glb.clouddn.com/owl_1.png?imageView2/2/w/300" alt=""></p>
<h3 id="max-height_u6ED1_u52A8_u6548_u679C"><a href="#max-height_u6ED1_u52A8_u6548_u679C" class="headerlink" title="max-height滑动效果"></a>max-height滑动效果</h3><p>纯CSS实现滑动效果，通过使用max-height和overflow hidden<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.slider</span> <span class="tag">ul</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">max-height</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="class">.slider</span><span class="pseudo">:hover</span> <span class="tag">ul</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">max-height</span>:<span class="value"> <span class="number">1000px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">transition</span>:<span class="value"> .<span class="number">3s</span> ease</span></span>; <span class="comment">/* animate to max-height */</span></span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="box-sizing_u7EE7_u627F"><a href="#box-sizing_u7EE7_u627F" class="headerlink" title="box-sizing继承"></a>box-sizing继承</h3><p>让box-sizing充满整个页面吧！！！<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">html</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">box-sizing</span>:<span class="value"> border-box</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line">*, *<span class="pseudo">:before</span>, *<span class="pseudo">:after</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">box-sizing</span>:<span class="value"> inherit</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="u201C_u94FE_u63A5_u201D_u6837_u5F0F"><a href="#u201C_u94FE_u63A5_u201D_u6837_u5F0F" class="headerlink" title="“链接”样式"></a>“链接”样式</h3><p>给默认的a链接样式，有时生成a链接不带class属性，想操作它并且又不影响其它的兄弟链接<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">a</span><span class="attr_selector">[href]</span><span class="pseudo">:not(</span><span class="attr_selector">[class]</span>) <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#008000</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">text-decoration</span>:<span class="value"> underline</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>参考资源<br><a href="https://github.com/AllThingsSmitty/css-protips" target="_blank" rel="external">https://github.com/AllThingsSmitty/css-protips</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>CSS3有非常多的新属性，特别是在移动端的使用，不仅能够加速CPU渲染效果，而且还能够省去一大堆的javascript。</p>
<p>下面我会介绍一些CSS3的专业技巧，如果你需要考虑IE浏览器，那就请掠过此篇文章，因为这些特性只能兼容到IE11。</p>
<h3 id=]]>
    </summary>
    
      <category term="CSS3" scheme="http://www.darcywang.com/tags/CSS3/"/>
    
      <category term="Techniques" scheme="http://www.darcywang.com/categories/Techniques/"/>
    
  </entry>
  
</feed>
